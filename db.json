{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/yun/source/yun.ico","path":"yun.ico","modified":1,"renderable":1},{"_id":"themes/yun/source/yun.svg","path":"yun.svg","modified":1,"renderable":1},{"_id":"themes/yun/source/images/Rem_up.jpg","path":"images/Rem_up.jpg","modified":1,"renderable":1},{"_id":"themes/yun/source/images/Yun.png","path":"images/Yun.png","modified":1,"renderable":1},{"_id":"themes/yun/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"themes/yun/source/css/hexo-theme-yun.styl","path":"css/hexo-theme-yun.styl","modified":1,"renderable":1},{"_id":"themes/yun/source/js/gallery-decrypt.js","path":"js/gallery-decrypt.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/hexo-theme-yun.js","path":"js/hexo-theme-yun.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/say.js","path":"js/say.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/analytics/leancloud-visitors.js","path":"js/analytics/leancloud-visitors.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/ui/banner.js","path":"js/ui/banner.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/comments/disqus.js","path":"js/comments/disqus.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/ui/fireworks.js","path":"js/ui/fireworks.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/ui/mode.js","path":"js/ui/mode.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/search/algolia-search.js","path":"js/search/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/yun/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"e9313fc4443ecd007286f7e92a2b6e7e342417cd","modified":1627736110792},{"_id":"source/CNAME","hash":"18541ba547928c5772e228f9aad74d6be241ac1d","modified":1629294426492},{"_id":"source/_posts/Java-note-2.md","hash":"aee6abc09717cde0773635a2b8681c270563817c","modified":1629793568797},{"_id":"source/_posts/Java-note-1.md","hash":"4e8b5496e43171a84f0e622000e4cb758811172a","modified":1629793560435},{"_id":"source/_posts/Java-note-3.md","hash":"bba4eb9fd843eac43e6a6594f6217ee953f67d8b","modified":1629793575761},{"_id":"source/_posts/Java-note-5.md","hash":"b6e65e42a6ec76e8119913e92e216281da04475b","modified":1629807541812},{"_id":"source/_posts/My-first-blog.md","hash":"e9d820eef36887a9ff5af60a1f377488d54ca0dc","modified":1627572168054},{"_id":"source/_posts/Java-note-4.md","hash":"8eef901fef4baa101718a67ae1a8d67f0313ed15","modified":1629799478455},{"_id":"source/_posts/SSL-makes-me-crazy-md.md","hash":"10ded9d1533eb6af8bb638da18497d2a2fdd217f","modified":1629556288438},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":499162500000},{"_id":"source/_posts/blog-generating-sharing.md","hash":"114b84b07e52260ec27a926ea7fa6eab419d7e5a","modified":1629556278552},{"_id":"source/_data/yun.yml","hash":"e5e05d69cf669b8fc13f4886c40d763d66495d96","modified":1629387461070},{"_id":"source/about/index.md","hash":"f82db30c19e1df250a0795f3202c4a264d7bbd6a","modified":1628145730053},{"_id":"source/categories/index.md","hash":"45b82a95ec0de10ab5b30b351307dbaf0de1033c","modified":1627568345396},{"_id":"source/tags/index.md","hash":"740a8380da5b7c8191dedf5af1555497a8cc51cb","modified":1627567816626},{"_id":"source/about/site.md","hash":"236b884a472d5f9a0b480b69f4d001efdeec0d06","modified":1629289623642},{"_id":"themes/yun/.eslintrc.js","hash":"ba8a899820888efce3741d4daf21f99291998ec1","modified":1627452785503},{"_id":"themes/yun/.gitignore","hash":"eff49494f374c44c21ce6012dd9bc73f9c1fb591","modified":1627452785503},{"_id":"themes/yun/LICENSE","hash":"fa221ceba871b104543fa698b80750fc19552fd2","modified":1627452785503},{"_id":"themes/yun/README.md","hash":"297a89f392af0ddcd3a958c329b699013eed7e4f","modified":1627452785503},{"_id":"themes/yun/package.json","hash":"365530fc2d10ab49d8366ede812b4ac971eff77d","modified":1627452785536},{"_id":"themes/yun/tsconfig.json","hash":"e075aed161843d2cdf3b58fc84940bfb5b1b0286","modified":1627452785567},{"_id":"themes/yun/_config.yml","hash":"716dbba05bbe5448478bf445e0e3802bc2f02925","modified":1627452785503},{"_id":"themes/yun/_vendors.yml","hash":"87fe6521ec79c6970f52709fb01cc5a443bd149f","modified":1627452785503},{"_id":"themes/yun/languages/default.yml","hash":"3866a13fe896b4c5d46541c5cab1f7e61453df19","modified":1627452785518},{"_id":"themes/yun/.github/FUNDING.yml","hash":"2c7dd51870c178dd679cb5221b57b853167b55a9","modified":1627452785503},{"_id":"themes/yun/docs/README.md","hash":"428e385ec211f79a95c5dd2d51fe2e23a849a253","modified":1627452785518},{"_id":"themes/yun/languages/en.yml","hash":"11c482bee3bda200125392c607a0bddc0f74f552","modified":1627452785518},{"_id":"themes/yun/languages/ja.yml","hash":"18ab694a0c64f4c0e53b570495625901e883df24","modified":1627452785518},{"_id":"themes/yun/layout/archive.pug","hash":"fcbd3bee3e2dc053170888d77de007ec330443be","modified":1627452785536},{"_id":"themes/yun/languages/zh-CN.yml","hash":"ef5675e4e6f4a42251ac1a08c4fd5f46d5e27a1f","modified":1627452785518},{"_id":"themes/yun/layout/category.pug","hash":"fc234721ac03d519dbdf39675af5a86e0b6db2e8","modified":1627452785536},{"_id":"themes/yun/layout/404.pug","hash":"9a158dd3f74a32008a7450522a7da39c4ae6abb7","modified":1627452785518},{"_id":"themes/yun/data/_comments.yml","hash":"21116cde2a4024e41f1f53ba32077759069f41ca","modified":1627452785503},{"_id":"themes/yun/layout/gallery.pug","hash":"80bc2502412d7e28405b9d79d93c8d619c31ae4f","modified":1627452785536},{"_id":"themes/yun/layout/girls.pug","hash":"1ffe8e69a5c20cf0c34c8001f291f014beb5762c","modified":1627452785536},{"_id":"themes/yun/layout/links.pug","hash":"b752504e651dcf35003edbe22700098b25d5c160","modified":1627452785536},{"_id":"themes/yun/layout/index.pug","hash":"72ce130efc06d107d5244e54d62bd533abe88bff","modified":1627452785536},{"_id":"themes/yun/layout/tag.pug","hash":"f1c2ae57b62f6a0c6fcc91a1270b5bf328ca2421","modified":1627452785536},{"_id":"themes/yun/layout/slide.pug","hash":"5374bcfaddfdfa0feb05b3829c0cfa0d7939cf7f","modified":1627452785536},{"_id":"themes/yun/layout/page.pug","hash":"0b7e8fd201b88056f66a3f6a06884cb8eba71b16","modified":1627452785536},{"_id":"themes/yun/source/yun.svg","hash":"78218ba93f0150e3613c7d0b60575ebe6131255f","modified":1627452785567},{"_id":"themes/yun/layout/post.pug","hash":"d5ffdbd47d39eb302872c2e17d7bc46194160e44","modified":1627452785536},{"_id":"themes/yun/.github/ISSUE_TEMPLATE/usage_problem.md","hash":"b41af96573f4b7b1c4492e8fc014685537ccbce8","modified":1627452785503},{"_id":"themes/yun/.github/ISSUE_TEMPLATE/bug_report.md","hash":"9a960b4706d17aed9ec9be4f71716130469d55b4","modified":1627452785503},{"_id":"themes/yun/.github/ISSUE_TEMPLATE/feature_request.md","hash":"57972849d8dc6fa63a6a0b4a2c7bbe4649c0843a","modified":1627452785503},{"_id":"themes/yun/source/yun.ico","hash":"5d63418cd650d1881d4b6507f35b9f9df766020e","modified":1627452785567},{"_id":"themes/yun/.github/workflows/docs.yml","hash":"d0762ef6861ce5a576251003494a0944931b1cfa","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/config.ts","hash":"abc3a1178c07ced1878202c4f890b4a19f03b2be","modified":1627452785503},{"_id":"themes/yun/docs/en/README.md","hash":"c69223c1a8fa97e73344f3947a9871bd9c6cdc29","modified":1627452785518},{"_id":"themes/yun/docs/about/icon.md","hash":"118b2a8ba9453b6639917e9e96e9ae54eaa8cee2","modified":1627452785518},{"_id":"themes/yun/docs/demo/README.md","hash":"40afcba7990cef22a5cfedf1f558b350414d90f9","modified":1627452785518},{"_id":"themes/yun/docs/guide/migrate.md","hash":"5fe91b4c8c3c87eb72f6555dba5aa96faf17e87b","modified":1627452785518},{"_id":"themes/yun/docs/about/README.md","hash":"b069cc513b830fd6c17fb4ebde63601ca27539eb","modified":1627452785518},{"_id":"themes/yun/docs/guide/README.md","hash":"6ec149ec07c3b8fd9cd1d65d451338afe883681d","modified":1627452785518},{"_id":"themes/yun/docs/guide/config.md","hash":"0fd2414e8aebacb90ec77c6fe6c527508a3d4739","modified":1627452785518},{"_id":"themes/yun/layout/_mixin/icon.pug","hash":"18ee2c33b4e6ef71c31d7955f9a20789fe6aa9e4","modified":1627452785518},{"_id":"themes/yun/layout/_mixin/index.pug","hash":"3c6964b4594e842e2aefcd316bdd0184750b40f1","modified":1627452785518},{"_id":"themes/yun/layout/_mixin/page-header.pug","hash":"56771304fc062882fcb83b3a57036cb12a6d2dab","modified":1627452785518},{"_id":"themes/yun/docs/guide/faq.md","hash":"caf23698ff982fedbb00f59e0f6580b8067d1806","modified":1627452785518},{"_id":"themes/yun/docs/guide/additional-package-support.md","hash":"20c7fcedb4ce2705c86f6e86b4b418e407475a93","modified":1627452785518},{"_id":"themes/yun/layout/_mixin/post-tags.pug","hash":"10eec5c3dad74e73a2ee9c05434e4757c080fcb5","modified":1627452785518},{"_id":"themes/yun/layout/_mixin/post-categories.pug","hash":"ee645a5c54c279e2346b7ba9f629efab61314026","modified":1627452785518},{"_id":"themes/yun/docs/guide/third-party-support.md","hash":"1f72314664185c08a98907528fa55a8a5a736750","modified":1627452785518},{"_id":"themes/yun/layout/_third-party/aplayer.pug","hash":"93d2be35ae9731056563d3cbdbf7b13b1933c80c","modified":1627452785536},{"_id":"themes/yun/docs/guide/page.md","hash":"9354301591f3994649b15594846be9635f37e599","modified":1627452785518},{"_id":"themes/yun/layout/_mixin/post-collapse.pug","hash":"741195a5a29ecb5863b1fd0c3b203d960aae05c1","modified":1627452785518},{"_id":"themes/yun/layout/_third-party/google-tagmanager.pug","hash":"4760e37fb37a41ef1417a427c0168c5fc5dd2ee6","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/index.pug","hash":"f6275c094349839c5af019e8a7f3f394ba0339bd","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/cdn.pug","hash":"53982879ad13077c198857034e21201517923a98","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/lightgallery.pug","hash":"63d2d1c4f55ea15fe8399bfe5da953581dd7a4b6","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/pjax.pug","hash":"f72620c6b56183d1061295b881b4738eeb49ab7f","modified":1627452785536},{"_id":"themes/yun/layout/_widget/index.pug","hash":"96d4a92e258688b17328d4470bacaabaccace67c","modified":1627452785536},{"_id":"themes/yun/layout/_widget/cloud.pug","hash":"eb3185db30fef0303b667e50b96a7d85edda8006","modified":1627452785536},{"_id":"themes/yun/layout/_widget/back-to-top.pug","hash":"4c880afb3213395fb64e8a6a4fc3b653bb82b938","modified":1627452785536},{"_id":"themes/yun/layout/_widget/mourn.pug","hash":"49eb1ebdb67c0529f00474bba2f99e87b8407266","modified":1627452785536},{"_id":"themes/yun/layout/_widget/notice.pug","hash":"346ada39ba6586cb631ac5b1f129683f3ee015f4","modified":1627452785536},{"_id":"themes/yun/layout/_widget/say.pug","hash":"2f32b3933b62d285eabb08af6ceaf02ba29a5eae","modified":1627452785536},{"_id":"themes/yun/layout/_widget/aplayer.pug","hash":"0a5ff8bc629ccd7c0e04664647bfff7fec152229","modified":1627452785536},{"_id":"themes/yun/source/images/Yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1627452785551},{"_id":"themes/yun/source/js/hexo-theme-yun.js","hash":"53b38073a4069c2baf6fd2ba5e3a435fadb2bc4f","modified":1627452785551},{"_id":"themes/yun/source/js/pjax.js","hash":"dbdf52e28d17374bc5bd2cf7cc57ae625a65a70d","modified":1627452785567},{"_id":"themes/yun/source/css/hexo-theme-yun.styl","hash":"8dc5e0e8a566debaf3b7299907924fc3cc79a6e4","modified":1627452785551},{"_id":"themes/yun/source/js/gallery-decrypt.js","hash":"0fdfe233d36b93ea4309040f4a254c3a48e4f3e6","modified":1627452785551},{"_id":"themes/yun/source/js/say.js","hash":"b44b3730d7167bbc2c33e5b154a7bb5d936b7710","modified":1627452785567},{"_id":"themes/yun/source/js/sidebar.js","hash":"454f38ec93a7629837e21ae8fb09f8f09fed8a90","modified":1627452785567},{"_id":"themes/yun/source/js/utils.js","hash":"61de0f1ff9fcf1bf64cec20d9e9c05b1d111bc92","modified":1627452785567},{"_id":"themes/yun/layout/_partial/banner.pug","hash":"4aadc9256c07914cb16dd98ab63a56a2e33aabb8","modified":1627452785534},{"_id":"themes/yun/layout/_partial/background.pug","hash":"d0995a2e840ac2698df3e45f9c6ee7eccdf94f9a","modified":1627452785534},{"_id":"themes/yun/layout/_partial/pagination.pug","hash":"b55b6a99b105447b4a6c982fa258680a2a9a34a9","modified":1627452785535},{"_id":"themes/yun/layout/_partial/layout.pug","hash":"3ec3dcca9697edbe868c791d4f28957012755d06","modified":1627452785534},{"_id":"themes/yun/layout/_partial/head.pug","hash":"ff6c41e56519c84d044a3339f2deb43dc26aa4e1","modified":1627452785534},{"_id":"themes/yun/layout/_partial/footer.pug","hash":"d75a31959f81b3d4b80c85e946a8f3085cb7a3c8","modified":1627452785534},{"_id":"themes/yun/scripts/events/config.js","hash":"82b7eab0787aff932f5e97047fd6c9b9692956de","modified":1627452785536},{"_id":"themes/yun/scripts/events/data.js","hash":"c041d3bdf16318a377b3224cb9aea655380efecc","modified":1627452785536},{"_id":"themes/yun/scripts/events/utils.js","hash":"0a3af6b400ed7e86b3b83d49dd1fdb868563c2a1","modified":1627452785536},{"_id":"themes/yun/scripts/events/index.js","hash":"45abc9b50cc4c10b2bbda1788233bdb3017a0715","modified":1627452785536},{"_id":"themes/yun/scripts/filters/index.js","hash":"ca5ef23cec64ac3fc53aae702a8684a53d98f71c","modified":1627452785551},{"_id":"themes/yun/layout/_partial/recent-posts.pug","hash":"8e9438e8cf95cf544a674e6b6bdf5cdd76e63b61","modified":1627452785536},{"_id":"themes/yun/scripts/helpers/encrypt.js","hash":"e3e0cd73a5bf0413a9e8fe96b1622f40c2c1db50","modified":1627452785551},{"_id":"themes/yun/layout/_partial/sidebar.pug","hash":"c4ef88a4bce0d7c2ac315c03eb5a64a70ebb644d","modified":1627452785536},{"_id":"themes/yun/scripts/helpers/engine.js","hash":"9b41629b73dc5bbc18772b292a029531bfd2beca","modified":1627452785551},{"_id":"themes/yun/scripts/tags/prompt.js","hash":"621d0fa41d15e5617b8a25dd7625c8e5691b35b6","modified":1627452785551},{"_id":"themes/yun/scripts/helpers/index.js","hash":"1b0d52542255837702cdc41d3885c349c5be5873","modified":1627452785551},{"_id":"themes/yun/scripts/helpers/yun-config.js","hash":"5018b34f22241cf01a0639dd212058f04994d6dd","modified":1627452785551},{"_id":"themes/yun/docs/.vuepress/components/DemoSite.vue","hash":"705e7ad2047e24ecb3221a0f9389eed966239aba","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/assets/README.md","hash":"aa4ab3ddd73a3cf356bcb79a77c57c0dcfe2fada","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/assets/icons.json","hash":"63b421ead217b5eb14cdcaaa1aa2263fb4c8e9d2","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/components/DemoSites.vue","hash":"2b9d705750ee663210168347c32c55eb1e019062","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/assets/sites.json","hash":"56976a33ec89a7b5841e0cb6dc596c1ff83f48d2","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/public/CNAME","hash":"c7ffe7d5488a88dfa38ef3780292c22088d5e8ce","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/components/DisplayIcon.vue","hash":"c2177efd18926a526071afd4af06b0cf1d7b7cbf","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/public/manifest.json","hash":"9eee8d68bc3b6afa3e22ef4fd02d3bd09c707e1f","modified":1627452785518},{"_id":"themes/yun/docs/.vuepress/scripts/index.js","hash":"c61b839368e3fa7bb7292b21446e145b2b8ecd23","modified":1627452785518},{"_id":"themes/yun/docs/.vuepress/scripts/markdown.js","hash":"740f5a1cca2843d9d0ae3c2ff91cbeab04500730","modified":1627452785518},{"_id":"themes/yun/docs/.vuepress/public/yun.svg","hash":"78218ba93f0150e3613c7d0b60575ebe6131255f","modified":1627452785518},{"_id":"themes/yun/docs/.vuepress/types/index.ts","hash":"7539a35c7deab9c0207569c1cd90b5bb0e381851","modified":1627452785518},{"_id":"themes/yun/docs/.vuepress/styles/palette.styl","hash":"25a57ac820b471bc91c151347a1c1d0cc62767d6","modified":1627452785518},{"_id":"themes/yun/docs/.vuepress/public/logo.gif","hash":"a2e7143f1f890f58a3c06b8c0acd7a7a3225022f","modified":1627452785518},{"_id":"themes/yun/docs/en/demo/README.md","hash":"a4f3c6174142bb986953dca953402f294f005890","modified":1627452785518},{"_id":"themes/yun/docs/.vuepress/scripts/generate-demo.js","hash":"d0b1d113e7cda000c805efe2824a0146bf368c5e","modified":1627452785518},{"_id":"themes/yun/docs/.vuepress/styles/index.scss","hash":"ab7b5bb51a39abfa2a23c875af9d1beb4059b7fb","modified":1627452785518},{"_id":"themes/yun/docs/en/about/README.md","hash":"45acb0c1830d34c8c23e790670c31f00eef52de9","modified":1627452785518},{"_id":"themes/yun/docs/en/about/icon.md","hash":"eca142f28f2bd9f7019c39c6cfcc92650c21ed70","modified":1627452785518},{"_id":"themes/yun/docs/en/guide/README.md","hash":"6e3365ecfe54d513bf9dbdd2da2702c831d7d4b6","modified":1627452785518},{"_id":"themes/yun/docs/en/guide/faq.md","hash":"b4630278cb17266b1727354ae7b5786c963345cb","modified":1627452785518},{"_id":"themes/yun/docs/en/guide/additional-package-support.md","hash":"b0b9ca67462eb8b3e580c0dfbdc63f725dca590b","modified":1627452785518},{"_id":"themes/yun/docs/en/guide/config.md","hash":"525fe73429074defc00cef163a6d66fb102720dd","modified":1627452785518},{"_id":"themes/yun/layout/_third-party/adsense/google-adsense.pug","hash":"ae63305d776ebec0d88f91197b5c78cdaa401585","modified":1627452785536},{"_id":"themes/yun/docs/en/guide/page.md","hash":"02718f061b22f7a1506623c426eb2553860cfede","modified":1627452785518},{"_id":"themes/yun/layout/_third-party/analytics/busuanzi.pug","hash":"d606071c4c4f1e0df9f55fa6c8e248eb2591c484","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/analytics/leancloud-visitors.pug","hash":"b837ea28a4b0e81a3f584eee2e7b7ce69c8befc6","modified":1627452785536},{"_id":"themes/yun/docs/en/guide/third-party-support.md","hash":"c129956235e081689947ed33a56103fe42efd4d8","modified":1627452785518},{"_id":"themes/yun/layout/_third-party/analytics/google-analytics.pug","hash":"3533cdc143c0b9b4304e375e0a1d2527050d989a","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/disqus.pug","hash":"5bfe34b45242487d9ab8e5bc97d8b0371658df8a","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/disqusjs.pug","hash":"54613c0acf1b57da6591c505944a0848f7696032","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/github-issues.pug","hash":"11801bd330160555dbaf3ef13955ebd61010c7d6","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/github-discussions.pug","hash":"1b559cbb7bcd1d423eab9d9a2ffdb8b7ebbbcea4","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/livere.pug","hash":"f565efde0ee74d69555e8b5c959c96e0f1ae61fb","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/index.pug","hash":"536ce0c65ccc1753858427f25a767f812ef75972","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/minivaline.pug","hash":"0548263c9f0460916aaeaf77928d27612c1a2897","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/twikoo.pug","hash":"719ecaa5b6d166ae0ef0adafc37136e1346379d6","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/utterances.pug","hash":"44adb592fa4995ff586b6b4ff16232323473992a","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/valine.pug","hash":"98901bdb9de7318a06a7b293a8dcc4e5b22d0992","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/comments/waline.pug","hash":"f6a735878ad7e971f9105c8eb654b862af87dbbf","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/math/index.pug","hash":"0365a84a14325a52ee574df3f633f96c7a47d78f","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/math/katex.pug","hash":"94ca4fffb5ca7fda7c3e243ff8597a19d0583372","modified":1627452785536},{"_id":"themes/yun/layout/_third-party/seo/baidu-push.pug","hash":"5b08e856a6c75a9b4a5aafccf52b1b418dac0e38","modified":1627452785536},{"_id":"themes/yun/layout/_widget/search/algolia-search.pug","hash":"e15f78a38d386d57c1a19b4a760115bd14edbb0d","modified":1627452785536},{"_id":"themes/yun/layout/_widget/search/local-search.pug","hash":"d2ba600623043b2410f379fd7ba3cc75329ff408","modified":1627452785536},{"_id":"themes/yun/layout/_widget/search/index.pug","hash":"a1dd964e05b5412c3fc446d80576e51b37926b87","modified":1627452785536},{"_id":"themes/yun/source/css/_components/card.styl","hash":"6d16aae8534f32a8ce439e648e347c98c1e58af3","modified":1627452785551},{"_id":"themes/yun/source/css/_components/button.styl","hash":"3315fc12b1b7659a06120b042a1a2e87a839ebe1","modified":1627452785551},{"_id":"themes/yun/source/css/_components/scrollbar.styl","hash":"3e332ae27d3aeab1496079cd509649ceccc0f4b5","modified":1627452785551},{"_id":"themes/yun/source/css/_components/ui.styl","hash":"8ef28ee3363f3676c9327a6d163032a003520f40","modified":1627452785551},{"_id":"themes/yun/source/css/_helper/index.styl","hash":"a1d8c100c8eaba73bf0b5ff412e8fa7b025e621b","modified":1627452785551},{"_id":"themes/yun/source/css/_extend/albums.styl","hash":"b0f703fc6e279844b75797edf714cce2135704ed","modified":1627452785551},{"_id":"themes/yun/source/css/_extend/girls.styl","hash":"393166ea98ef4bee611dcf00f5e8e22df60b2af0","modified":1627452785551},{"_id":"themes/yun/source/css/_layout/banner.styl","hash":"2dcc1dbb729af55fdd743aae4054e1781ff49a0f","modified":1627452785551},{"_id":"themes/yun/source/css/_layout/footer.styl","hash":"ed3afcddad7358ebd89f01846157e26a586e7adf","modified":1627452785551},{"_id":"themes/yun/source/css/_layout/grid.styl","hash":"afada46bff9956d51a539ed4732e320b55032b5a","modified":1627452785551},{"_id":"themes/yun/source/css/_layout/links.styl","hash":"9c060919f57a9928331aec8c7bfaae56a6fa8401","modified":1627452785551},{"_id":"themes/yun/source/css/_layout/main.styl","hash":"03669973c1cbb5c93fdba4c011666b921f0587e3","modified":1627452785551},{"_id":"themes/yun/source/css/_layout/page.styl","hash":"52ff29d8bdc61dedb0a6515dd84cf015db67a499","modified":1627452785551},{"_id":"themes/yun/source/css/_layout/pagination.styl","hash":"00f95595a8937c7ce4c6069c78e8574600b67d73","modified":1627452785551},{"_id":"themes/yun/source/css/_global/dark.styl","hash":"5c0609091e9afd11a7a6b13bc4be986918ee35ca","modified":1627452785551},{"_id":"themes/yun/source/css/_global/index.styl","hash":"01cc3bea8ddbcff5353f98edc6a5073ba89cc53c","modified":1627452785551},{"_id":"themes/yun/source/css/_layout/post.styl","hash":"29e0fe7a0f7948d551d37d1054d88524052baa3d","modified":1627452785551},{"_id":"themes/yun/source/css/_mixins/helper.styl","hash":"09e560ae6db2bccaf39dff8882977cab2e9dec3b","modified":1627452785551},{"_id":"themes/yun/source/css/_mixins/base.styl","hash":"0430e840b280cd6258c4cdf9397c49e89bff2682","modified":1627452785551},{"_id":"themes/yun/source/css/_global/reset.styl","hash":"d1640eb4f76a3cf792c5149e93c42c85da5a29b2","modified":1627452785551},{"_id":"themes/yun/source/css/_variables/_base.styl","hash":"d94e4e978e4d9cdb361a906f2f417787ed86f86a","modified":1627452785551},{"_id":"themes/yun/source/css/_variables/_colors.styl","hash":"f7f492e8bd96c7054909fc360e392bc3984dae8d","modified":1627452785551},{"_id":"themes/yun/source/css/_widget/back-to-top.styl","hash":"d86e0c0c6af9fcb293c1fcef20f4ed68272ccc71","modified":1627452785551},{"_id":"themes/yun/source/js/analytics/leancloud-visitors.js","hash":"39da9b031923d56cd941265818943aa8b5677049","modified":1627452785551},{"_id":"themes/yun/source/css/_widget/comment.styl","hash":"fe9e597e3470027f6d81acf557a36d1fba4c86a5","modified":1627452785551},{"_id":"themes/yun/source/css/_widget/notice.styl","hash":"8b1ca54535311f38b91433e5beadbeed02ecd28b","modified":1627452785551},{"_id":"themes/yun/source/css/_widget/index.styl","hash":"640fea56a013989f5878334d09f3f9b716865c8c","modified":1627452785551},{"_id":"themes/yun/source/css/_widget/say.styl","hash":"01dac9059f96fb085edf230e63f3f5e351358fde","modified":1627452785551},{"_id":"themes/yun/source/js/ui/banner.js","hash":"4f065d4dd3d8fbf11dce5d647fb0efe076d13dd3","modified":1627452785567},{"_id":"themes/yun/source/js/comments/disqus.js","hash":"d7e532c58a26ffbf5578fc42f370d73a6289205e","modified":1627452785551},{"_id":"themes/yun/source/js/ui/fireworks.js","hash":"c98826194c90d35f64591c87f9bc64f5891af900","modified":1627452785567},{"_id":"themes/yun/source/js/ui/mode.js","hash":"f17fa75c84d03cdb6d8ecafcea05d3fd7cbc3ee7","modified":1627452785567},{"_id":"themes/yun/source/js/search/algolia-search.js","hash":"babe61a9a2b2dc921dce6737863b7f0b53eaa750","modified":1627452785567},{"_id":"themes/yun/layout/_partial/post/post-copyright.pug","hash":"a2415fb36a0dffbe57bf32cd2cfeace11cbaed6b","modified":1627452785536},{"_id":"themes/yun/source/js/search/local-search.js","hash":"8a22e764624baf973f08b1195105630ed1f1b3e7","modified":1627452785567},{"_id":"themes/yun/layout/_partial/post/post-edit.pug","hash":"2b7d4c210815ddc63c5b6fc5b5fd6a348e75093f","modified":1627452785536},{"_id":"themes/yun/layout/_partial/post/post-nav.pug","hash":"ea351236ab82ff43b66272de1baade70d868131f","modified":1627452785536},{"_id":"themes/yun/layout/_partial/post/reward.pug","hash":"f19b6562f1df71c23dafed15f2f3c9415414e281","modified":1627452785536},{"_id":"themes/yun/layout/_partial/post/post-schema.pug","hash":"ec85079174da20c9f608b142e7fda2c28a9b1dac","modified":1627452785536},{"_id":"themes/yun/layout/_partial/post/post-meta.pug","hash":"9aebdcdea704842b010a0e34073c6bb864cf9515","modified":1627452785536},{"_id":"themes/yun/docs/.vuepress/configs/sidebar/zh.ts","hash":"1353e31c9c0fb127abc3306a4ee7ffaf46fa0e86","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/configs/sidebar/index.ts","hash":"cb1ae897a9c7a33807e97f8c8d066af871f20c67","modified":1627452785503},{"_id":"themes/yun/layout/_partial/sidebar/info.pug","hash":"db26c881a5d8c8e2d96c2e5598e9c3c40d135cdf","modified":1627452785536},{"_id":"themes/yun/docs/.vuepress/configs/sidebar/en.ts","hash":"c6ddf398205381e97a159d24258b32d7474df56a","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/configs/navbar/en.ts","hash":"a14ee57fbff98f729ba3a22e3b5dc6e21b1d4804","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/configs/navbar/zh.ts","hash":"115c8c42482a5c1b561c6976f9c07b8fd05d34b5","modified":1627452785503},{"_id":"themes/yun/docs/.vuepress/configs/navbar/index.ts","hash":"c0156915b804350cce4d02fb15f39338cb78c32d","modified":1627452785503},{"_id":"themes/yun/source/css/_components/post/post-codebloack.styl","hash":"ca312b2acfee5f8019e39937500a7ed17762f72a","modified":1627452785551},{"_id":"themes/yun/source/css/_components/post/post-card.styl","hash":"dedc42a3e2ea3c98dcedacebf8c190d0938bd88c","modified":1627452785551},{"_id":"themes/yun/docs/.vuepress/public/images/mickey-mouse.jpg","hash":"96a9449730d5149b8d114c2a7d8caaa364257dd0","modified":1627452785518},{"_id":"themes/yun/source/css/_components/post/post-markdown.styl","hash":"b536c98fff32c6370022f4a3c63f3617b890ef82","modified":1627452785551},{"_id":"themes/yun/source/css/_components/post/post-collapse.styl","hash":"6741c225a37e7e121d4159f129b7024402a8eeec","modified":1627452785551},{"_id":"themes/yun/source/css/_components/post/post-header.styl","hash":"3be5d23cda0020365dbfb39ca35eb00aef65e7cd","modified":1627452785551},{"_id":"themes/yun/source/css/_components/post/post-nav.styl","hash":"cec22a5a36eda86b1ee8038e1fa24d9a6c9a0f7f","modified":1627452785551},{"_id":"themes/yun/source/css/_components/post/post-reward.styl","hash":"454aa79758c9be46c8d8fa226b38e7ac1834ce3b","modified":1627452785551},{"_id":"themes/yun/source/css/_components/sidebar/hamburger.styl","hash":"0fa240e8a71fdad14d3fd6b3fd49cf697d4c8153","modified":1627452785551},{"_id":"themes/yun/source/css/_components/sidebar/sidebar-nav.styl","hash":"a8c2eb2d01a02855ff074e2765c5275f839c7315","modified":1627452785551},{"_id":"themes/yun/source/css/_components/sidebar/sidebar.styl","hash":"21b2532c943e06bae70ed2a6b341b4816ce55898","modified":1627452785551},{"_id":"themes/yun/source/css/_components/sidebar/sidebar-toc.styl","hash":"fe429fb5aa85739c23a052737aba12418149b182","modified":1627452785551},{"_id":"themes/yun/source/css/_components/sidebar/site-overview.styl","hash":"1a34782575569c8fec4489716a3dae13a88c8170","modified":1627452785551},{"_id":"themes/yun/source/css/_extend/tags/index.styl","hash":"84112e467510c4d78dc8d9e6cbe1a5012e4d20d8","modified":1627452785551},{"_id":"themes/yun/source/css/_extend/tags/prompt.styl","hash":"4294c5e7f3aef84d369a8ac71f8340e39a681c59","modified":1627452785551},{"_id":"themes/yun/source/css/_widget/search/local-search.styl","hash":"06468fd1f85390134d4cf034dc5abcc114018257","modified":1627452785551},{"_id":"themes/yun/source/css/_widget/search/index.styl","hash":"271036cc7fad9414a8e2dd55292a1a3773b8bae0","modified":1627452785551},{"_id":"themes/yun/source/css/_widget/search/algolia-search.styl","hash":"d008422dfd104304f50e472a431afa16cad0e15a","modified":1627452785551},{"_id":"themes/yun/docs/.vuepress/public/images/index-preview.jpg","hash":"31aaa79aff97bdb98945c541d6bc698d450e078e","modified":1627452785518},{"_id":"themes/yun/source/images/avatar.png","hash":"a50d4dcc98defd8b16dea2dbff59047193318d54","modified":1627451921732},{"_id":"themes/yun/source/images/Rem_up.jpg","hash":"b3096fec6568d27e59a9fd63c309915cf488e398","modified":1628226794165},{"_id":"public/atom.xml","hash":"2e0647a339ec40a69e800d5ded1dd3293af0207c","modified":1629807635067},{"_id":"public/search.json","hash":"28094a801060be1aedca1c70268f502abd2454ec","modified":1629807635067},{"_id":"public/about/index.html","hash":"031e4f48c62d481ab12ab27a341d554217feb904","modified":1629807635067},{"_id":"public/categories/index.html","hash":"378fb704e118ccdb10c9bc5110f14d6c79e77764","modified":1629807635067},{"_id":"public/about/site.html","hash":"0490f0fed828394b3c2116e3037c397f53778fbd","modified":1629807635067},{"_id":"public/tags/index.html","hash":"1dd86da612ad1e3eb587e6844248996bad3ed2f3","modified":1629807635067},{"_id":"public/404.html","hash":"12e8f2b9de0e040fc7624c50ccecb5d734ab9e8b","modified":1629807635067},{"_id":"public/archives/index.html","hash":"45904099a0207079fb79e526c08a5b3a75502fed","modified":1629807635067},{"_id":"public/archives/2021/index.html","hash":"9f305618cb89fe2e5abf46fb6e61f16b34d49f33","modified":1629807635067},{"_id":"public/archives/2021/07/index.html","hash":"cf415bd1214eb874ac4de8e397e2db00b004b127","modified":1629807635067},{"_id":"public/archives/2021/08/index.html","hash":"87f4b2d40bb4a7f6ea3191d3d03366c909d7d695","modified":1629807635067},{"_id":"public/categories/学习笔记/index.html","hash":"2022a3d08641515fb63147ce20e695c56307adb9","modified":1629807635067},{"_id":"public/categories/没有内容的测试文章/index.html","hash":"15a3ae6458c774a97a1fb68a77cb3b290f5a1a2d","modified":1629807635067},{"_id":"public/categories/学习笔记/Java笔记/index.html","hash":"0d78a568962c9ac1cfac4f672f4a00882f9eab7a","modified":1629807635067},{"_id":"public/categories/牢骚向/index.html","hash":"b10bdcc24a9b136c86323265be18e4659a24015a","modified":1629807635067},{"_id":"public/categories/技术向/index.html","hash":"e843e056df995218bafe2f093edf9b6c35dfa6da","modified":1629807635067},{"_id":"public/tags/Java/index.html","hash":"5709fac0d02f28638efa0d95ed72841409983a90","modified":1629807635067},{"_id":"public/tags/学习/index.html","hash":"59bf34ad0816eb6222f435b0151cacf1f3bdd38d","modified":1629807635067},{"_id":"public/tags/博客功能测试/index.html","hash":"d895cf0d10771a06f04a27f77976abf754bf1ecf","modified":1629807635067},{"_id":"public/tags/博客搭建/index.html","hash":"1f01c6af89074b07c02e2339b864361b18347551","modified":1629807635067},{"_id":"public/tags/SSL/index.html","hash":"f962c6318358988d2c9d97ba7242c404a9fd4b64","modified":1629807635067},{"_id":"public/tags/Hexo/index.html","hash":"a8335c752674f63d54a759128ea68a172dfe95c0","modified":1629807635067},{"_id":"public/2021/08/24/Java-note-5/index.html","hash":"e13de3ea4ed3af6684dcab7029baf21d6bea1f18","modified":1629807635067},{"_id":"public/2021/08/24/Java-note-4/index.html","hash":"2d3aaf9026b65cc80f12622ed6f13849039f1c4b","modified":1629807635067},{"_id":"public/2021/08/24/Java-note-3/index.html","hash":"c08b920ef658cda4f5202aaacc1fb10fb5412bed","modified":1629807635067},{"_id":"public/2021/08/24/Java-note-2/index.html","hash":"9f9caa89901f4abf98aa71a3e7c7e9826767c9d7","modified":1629807635067},{"_id":"public/2021/08/24/Java-note-1/index.html","hash":"192d352aab6496aa8efd0c93faa76a261e0634bb","modified":1629807635067},{"_id":"public/2021/08/18/SSL-makes-me-crazy-md/index.html","hash":"f0c7c6342435838797d09b894179a9fe46b9c55b","modified":1629807635067},{"_id":"public/2021/08/05/blog-generating-sharing/index.html","hash":"b4c83afd4273dd6f0ce1df70b743aecdea801532","modified":1629807635067},{"_id":"public/2021/07/28/My-first-blog/index.html","hash":"27b0dcf950a104b08d243f44ececeb2302d2cfc7","modified":1629807635067},{"_id":"public/2021/07/28/hello-world/index.html","hash":"731a13a2597f8e8afff19bd44e3caf16cba6e55c","modified":1629807635067},{"_id":"public/index.html","hash":"b817c039631b8d5efca1a29a842164e4790179da","modified":1629807635067},{"_id":"public/tags/分享/index.html","hash":"b2d2de37ff35fd82fd4c0d2d7e9c427f05a54f14","modified":1629807635067},{"_id":"public/CNAME","hash":"18541ba547928c5772e228f9aad74d6be241ac1d","modified":1629807635067},{"_id":"public/yun.svg","hash":"78218ba93f0150e3613c7d0b60575ebe6131255f","modified":1629807635067},{"_id":"public/yun.ico","hash":"5d63418cd650d1881d4b6507f35b9f9df766020e","modified":1629807635067},{"_id":"public/images/Yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1629807635067},{"_id":"public/js/gallery-decrypt.js","hash":"9fdbb18bc6f2df816497288d2d0d7d5171046ab1","modified":1629807635067},{"_id":"public/js/pjax.js","hash":"4fd54bd75d9eb751770543ad3dcf2ee03c8485c5","modified":1629807635067},{"_id":"public/js/hexo-theme-yun.js","hash":"ea104f1b49f4418c4168d29f8a12086bd91274df","modified":1629807635067},{"_id":"public/js/sidebar.js","hash":"ad553417673b72cdc465cdab7205a43c68b07eae","modified":1629807635067},{"_id":"public/js/say.js","hash":"e0908e35d0fb9d825596a476b27e265175ebf053","modified":1629807635067},{"_id":"public/js/utils.js","hash":"0a9f4898904737c37b36d53be9697b8f991ca1e3","modified":1629807635067},{"_id":"public/js/analytics/leancloud-visitors.js","hash":"7719a85b7da5ae52659451729fab52e065462f30","modified":1629807635067},{"_id":"public/js/ui/banner.js","hash":"09456f8f16e5f9300657bf23eba43e705561f76c","modified":1629807635067},{"_id":"public/js/comments/disqus.js","hash":"0fac74f042c0e8818a1d01580204d70d0ab13f52","modified":1629807635067},{"_id":"public/js/ui/mode.js","hash":"42b868d77fcc5eac53f5520dd89db385595555d0","modified":1629807635067},{"_id":"public/js/ui/fireworks.js","hash":"5fea87a42f3f4b0cbb13fe8b46195e9bb41e64a5","modified":1629807635067},{"_id":"public/js/search/algolia-search.js","hash":"5133e150f4b0168bfe64ad5cbcb5625de08dd6b9","modified":1629807635067},{"_id":"public/js/search/local-search.js","hash":"7cfeb3474cb13664bdfc2c518371d409df406c6a","modified":1629807635067},{"_id":"public/css/hexo-theme-yun.css","hash":"07cfbe93bdd69fa6240e96eeac8b230f4d6ed361","modified":1629807635067},{"_id":"public/images/avatar.png","hash":"a50d4dcc98defd8b16dea2dbff59047193318d54","modified":1629807635067},{"_id":"public/images/Rem_up.jpg","hash":"b3096fec6568d27e59a9fd63c309915cf488e398","modified":1629807635067}],"Category":[{"name":"学习笔记","_id":"cksq1dwrd0004csvjc9m008wj"},{"name":"Java笔记","parent":"cksq1dwrd0004csvjc9m008wj","_id":"cksq1dwrv000kcsvj6zj90rx7"},{"name":"没有内容的测试文章","_id":"cksq1dws1000vcsvjh2e350pa"},{"name":"牢骚向","_id":"cksq1dws60018csvj96kycurf"},{"name":"技术向","_id":"cksq1dwsn001ocsvjdqgxf8lm"}],"Data":[{"_id":"yun","data":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}],"Page":[{"title":"About Me","date":"2021-07-29T14:38:47.000Z","reward":true,"_content":"\n## 关于我本人\n\n> 生于2002-05-05，性别男，湖南长沙人，本科在华中科技大学读计算机科学与技术，研究生不知道，可能考不上（恼\n>\n> 遵纪守法好青年，不抽烟不喝酒，除了脑子不太好使其他都还行\n\n- 爱好：ACGN，插画，~~摸鱼~~，数码。\n- 擅长的事：败家。\n- 不擅长的事：学习，跟别人打交道（尤其是女生）。\n- 喜欢的东西：纸片人，快乐水，电子产品（属于是喜欢但不是很懂），开源项目。\n- 不喜欢的东西：运动（老肥宅了），酒，烟。\n- 单推：笑死，是dd。\n- 目标：前端工程师/全栈工程师/游戏制作人/动画制作人\n- 人生理想：在一线城市能买房（想peach），35岁不退休，不孤独终老。\n\n***\n\n## 联系我\n\n侧边栏中有我的一些社交方式，然而本人社恐，所以都不咋看，实在想联系我建议邮箱（这个侧边栏也有吧大概）。\n\n> 还有就是如果各位对本站有什么建议都可以联系我提出来，我看的懂就找时间改（咕咕咕\n\n***\n\n哦还有一件事，各位如果是刀客塔的话可以加我：官服 OceanCat#3909，~~欢迎互赠线索七~~\n\n","source":"about/index.md","raw":"---\ntitle: About Me\ndate: 2021-07-29 22:38:47\nreward: true\n---\n\n## 关于我本人\n\n> 生于2002-05-05，性别男，湖南长沙人，本科在华中科技大学读计算机科学与技术，研究生不知道，可能考不上（恼\n>\n> 遵纪守法好青年，不抽烟不喝酒，除了脑子不太好使其他都还行\n\n- 爱好：ACGN，插画，~~摸鱼~~，数码。\n- 擅长的事：败家。\n- 不擅长的事：学习，跟别人打交道（尤其是女生）。\n- 喜欢的东西：纸片人，快乐水，电子产品（属于是喜欢但不是很懂），开源项目。\n- 不喜欢的东西：运动（老肥宅了），酒，烟。\n- 单推：笑死，是dd。\n- 目标：前端工程师/全栈工程师/游戏制作人/动画制作人\n- 人生理想：在一线城市能买房（想peach），35岁不退休，不孤独终老。\n\n***\n\n## 联系我\n\n侧边栏中有我的一些社交方式，然而本人社恐，所以都不咋看，实在想联系我建议邮箱（这个侧边栏也有吧大概）。\n\n> 还有就是如果各位对本站有什么建议都可以联系我提出来，我看的懂就找时间改（咕咕咕\n\n***\n\n哦还有一件事，各位如果是刀客塔的话可以加我：官服 OceanCat#3909，~~欢迎互赠线索七~~\n\n","updated":"2021-08-05T06:42:10.053Z","path":"about/index.html","comments":1,"layout":"page","_id":"cksq1dwr20000csvj4inj9nv6","content":"<h2 id=\"关于我本人\"><a href=\"#关于我本人\" class=\"headerlink\" title=\"关于我本人\"></a>关于我本人</h2><blockquote>\n<p>生于2002-05-05，性别男，湖南长沙人，本科在华中科技大学读计算机科学与技术，研究生不知道，可能考不上（恼</p>\n<p>遵纪守法好青年，不抽烟不喝酒，除了脑子不太好使其他都还行</p>\n</blockquote>\n<ul>\n<li>爱好：ACGN，插画，<del>摸鱼</del>，数码。</li>\n<li>擅长的事：败家。</li>\n<li>不擅长的事：学习，跟别人打交道（尤其是女生）。</li>\n<li>喜欢的东西：纸片人，快乐水，电子产品（属于是喜欢但不是很懂），开源项目。</li>\n<li>不喜欢的东西：运动（老肥宅了），酒，烟。</li>\n<li>单推：笑死，是dd。</li>\n<li>目标：前端工程师/全栈工程师/游戏制作人/动画制作人</li>\n<li>人生理想：在一线城市能买房（想peach），35岁不退休，不孤独终老。</li>\n</ul>\n<hr>\n<h2 id=\"联系我\"><a href=\"#联系我\" class=\"headerlink\" title=\"联系我\"></a>联系我</h2><p>侧边栏中有我的一些社交方式，然而本人社恐，所以都不咋看，实在想联系我建议邮箱（这个侧边栏也有吧大概）。</p>\n<blockquote>\n<p>还有就是如果各位对本站有什么建议都可以联系我提出来，我看的懂就找时间改（咕咕咕</p>\n</blockquote>\n<hr>\n<p>哦还有一件事，各位如果是刀客塔的话可以加我：官服 OceanCat#3909，<del>欢迎互赠线索七</del></p>\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h2 id=\"关于我本人\"><a href=\"#关于我本人\" class=\"headerlink\" title=\"关于我本人\"></a>关于我本人</h2><blockquote>\n<p>生于2002-05-05，性别男，湖南长沙人，本科在华中科技大学读计算机科学与技术，研究生不知道，可能考不上（恼</p>\n<p>遵纪守法好青年，不抽烟不喝酒，除了脑子不太好使其他都还行</p>\n</blockquote>\n<ul>\n<li>爱好：ACGN，插画，<del>摸鱼</del>，数码。</li>\n<li>擅长的事：败家。</li>\n<li>不擅长的事：学习，跟别人打交道（尤其是女生）。</li>\n<li>喜欢的东西：纸片人，快乐水，电子产品（属于是喜欢但不是很懂），开源项目。</li>\n<li>不喜欢的东西：运动（老肥宅了），酒，烟。</li>\n<li>单推：笑死，是dd。</li>\n<li>目标：前端工程师/全栈工程师/游戏制作人/动画制作人</li>\n<li>人生理想：在一线城市能买房（想peach），35岁不退休，不孤独终老。</li>\n</ul>\n<hr>\n<h2 id=\"联系我\"><a href=\"#联系我\" class=\"headerlink\" title=\"联系我\"></a>联系我</h2><p>侧边栏中有我的一些社交方式，然而本人社恐，所以都不咋看，实在想联系我建议邮箱（这个侧边栏也有吧大概）。</p>\n<blockquote>\n<p>还有就是如果各位对本站有什么建议都可以联系我提出来，我看的懂就找时间改（咕咕咕</p>\n</blockquote>\n<hr>\n<p>哦还有一件事，各位如果是刀客塔的话可以加我：官服 OceanCat#3909，<del>欢迎互赠线索七</del></p>\n"},{"date":"2021-07-29T14:17:45.000Z","comments":0,"type":"categories","_content":"\n","source":"categories/index.md","raw":"---\n\ndate: 2021-07-29 22:17:45\n\ncomments: false\n\ntype: categories\n\n---\n\n","updated":"2021-07-29T14:19:05.396Z","path":"categories/index.html","title":"","layout":"page","_id":"cksq1dwra0002csvj6nv42bkd","content":"","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":""},{"layout":"404","title":"这里什么也没有_(:з」∠)_","reward":false,"_content":"\n","source":"404.md","raw":"---\nlayout: 404\ntitle: 这里什么也没有_(:з」∠)_\npermalink: /404.html\nreward: false\n---\n\n","date":"2021-07-31T12:55:10.792Z","updated":"2021-07-31T12:55:10.792Z","path":"/404.html","comments":1,"_id":"cksq1dwrf0006csvj2prc9h1g","content":"","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":""},{"title":"About Site","date":"2021-08-05T05:38:47.000Z","update":"2021-08-17T11:09:10.000Z","_content":"\n### 本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能\n\n> 别问，问就是站长太懒，三天打鱼两天晒网\n\n#### 域名出了点问题，站长选择摆烂（2021.08.18）\n\n不知道怎么回事，可能是解析有问题吧，自己瞎几把搞不会了，反正也只是自己写着玩，就用GitHub的域名好了，还免费，摆烂摆烂\n\n以上\n\n***\n\n#### 好消息好消息！（2021.08.17）\n\n本站有自己的域名了！不过服务器由于过于玄妙站长没调教明白（~~本来部署好了结果自己瞎✔8整又整得无法访问了~~），所以最终采用的解决方案是把域名解析到GitHub Pages，网站仍然部署在GitHub上，这样还省钱，只要给域名续费就好了，之前准备的服务器站长打算用来练习Linux的操作，然后部署开发环境之后学习开发用，总之就是暂时不拿来部署网站了，等到对这方面知识了解更深之后再过来好好研究\n\n以上\n\n***\n\n#### 通知一个事儿（2021.08.08）\n\n由于GitHub在国内访问速度过于感人，屑站长在阿里云上整了台服务器，正在激情调教中，同时也注册了域名，待域名备案完成，服务器调教成功后可能会把站点部署到服务器上，到时候这个站可能会暂停使用，当然仓库仍然保留用于备份源文件，同时新站点会在该仓库的README.md文档中更新。\n\n以上。\n\n***\n\n#### 简单介绍下本站吧（2021.08.05）\n\n+ 本站为Kken同学的个人博客，基本由Kken同学一人打理。\n+ Kken同学又懒又菜，平日只会打游戏、看纸片人，所以文章更新佛系。\n+ 本站所更新的内容包括但不限于：技术、生活、笔记、牢骚。。。。。。\n+ 本站提供RSS订阅，看见侧边栏那个RSS图标没，就是那个，~~虽然不知道RSS是啥~~。\n+ 本站使用[Hexo](https://hexo.io/zh-cn/)框架和[Yun](https://github.com/YunYouJun/hexo-theme-yun/)主题，十分简单，有手就行，顺便安利一波这个主题，挺好看的。\n+ 本站部署在某大型同性交友网站[GitHub](https://github.com/)上，GitHub Pages真香。\n+ 本站开源，点击侧边栏中那个像盒子一样的图标即可跳转至源文件所在的GitHub仓库，~~欢迎与站长对线~~\n\n> 本站域名为对应的GitHub仓库名，若有了新的域名将会在仓库的hexo分支的README.md文档中更新说明，同时在该页面也会更新，其他重大变动都会在该页进行说明😀","source":"about/site.md","raw":"---\ntitle: About Site\ndate: 2021-08-05 13:38:47\nupdate: 2021-08-17 19:09:10\n---\n\n### 本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能\n\n> 别问，问就是站长太懒，三天打鱼两天晒网\n\n#### 域名出了点问题，站长选择摆烂（2021.08.18）\n\n不知道怎么回事，可能是解析有问题吧，自己瞎几把搞不会了，反正也只是自己写着玩，就用GitHub的域名好了，还免费，摆烂摆烂\n\n以上\n\n***\n\n#### 好消息好消息！（2021.08.17）\n\n本站有自己的域名了！不过服务器由于过于玄妙站长没调教明白（~~本来部署好了结果自己瞎✔8整又整得无法访问了~~），所以最终采用的解决方案是把域名解析到GitHub Pages，网站仍然部署在GitHub上，这样还省钱，只要给域名续费就好了，之前准备的服务器站长打算用来练习Linux的操作，然后部署开发环境之后学习开发用，总之就是暂时不拿来部署网站了，等到对这方面知识了解更深之后再过来好好研究\n\n以上\n\n***\n\n#### 通知一个事儿（2021.08.08）\n\n由于GitHub在国内访问速度过于感人，屑站长在阿里云上整了台服务器，正在激情调教中，同时也注册了域名，待域名备案完成，服务器调教成功后可能会把站点部署到服务器上，到时候这个站可能会暂停使用，当然仓库仍然保留用于备份源文件，同时新站点会在该仓库的README.md文档中更新。\n\n以上。\n\n***\n\n#### 简单介绍下本站吧（2021.08.05）\n\n+ 本站为Kken同学的个人博客，基本由Kken同学一人打理。\n+ Kken同学又懒又菜，平日只会打游戏、看纸片人，所以文章更新佛系。\n+ 本站所更新的内容包括但不限于：技术、生活、笔记、牢骚。。。。。。\n+ 本站提供RSS订阅，看见侧边栏那个RSS图标没，就是那个，~~虽然不知道RSS是啥~~。\n+ 本站使用[Hexo](https://hexo.io/zh-cn/)框架和[Yun](https://github.com/YunYouJun/hexo-theme-yun/)主题，十分简单，有手就行，顺便安利一波这个主题，挺好看的。\n+ 本站部署在某大型同性交友网站[GitHub](https://github.com/)上，GitHub Pages真香。\n+ 本站开源，点击侧边栏中那个像盒子一样的图标即可跳转至源文件所在的GitHub仓库，~~欢迎与站长对线~~\n\n> 本站域名为对应的GitHub仓库名，若有了新的域名将会在仓库的hexo分支的README.md文档中更新说明，同时在该页面也会更新，其他重大变动都会在该页进行说明😀","updated":"2021-08-18T12:27:03.642Z","path":"about/site.html","comments":1,"layout":"page","_id":"cksq1dwrh0008csvjhgfz0etk","content":"<h3 id=\"本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能\"><a href=\"#本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能\" class=\"headerlink\" title=\"本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能\"></a>本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能</h3><blockquote>\n<p>别问，问就是站长太懒，三天打鱼两天晒网</p>\n</blockquote>\n<h4 id=\"域名出了点问题，站长选择摆烂（2021-08-18）\"><a href=\"#域名出了点问题，站长选择摆烂（2021-08-18）\" class=\"headerlink\" title=\"域名出了点问题，站长选择摆烂（2021.08.18）\"></a>域名出了点问题，站长选择摆烂（2021.08.18）</h4><p>不知道怎么回事，可能是解析有问题吧，自己瞎几把搞不会了，反正也只是自己写着玩，就用GitHub的域名好了，还免费，摆烂摆烂</p>\n<p>以上</p>\n<hr>\n<h4 id=\"好消息好消息！（2021-08-17）\"><a href=\"#好消息好消息！（2021-08-17）\" class=\"headerlink\" title=\"好消息好消息！（2021.08.17）\"></a>好消息好消息！（2021.08.17）</h4><p>本站有自己的域名了！不过服务器由于过于玄妙站长没调教明白（<del>本来部署好了结果自己瞎✔8整又整得无法访问了</del>），所以最终采用的解决方案是把域名解析到GitHub Pages，网站仍然部署在GitHub上，这样还省钱，只要给域名续费就好了，之前准备的服务器站长打算用来练习Linux的操作，然后部署开发环境之后学习开发用，总之就是暂时不拿来部署网站了，等到对这方面知识了解更深之后再过来好好研究</p>\n<p>以上</p>\n<hr>\n<h4 id=\"通知一个事儿（2021-08-08）\"><a href=\"#通知一个事儿（2021-08-08）\" class=\"headerlink\" title=\"通知一个事儿（2021.08.08）\"></a>通知一个事儿（2021.08.08）</h4><p>由于GitHub在国内访问速度过于感人，屑站长在阿里云上整了台服务器，正在激情调教中，同时也注册了域名，待域名备案完成，服务器调教成功后可能会把站点部署到服务器上，到时候这个站可能会暂停使用，当然仓库仍然保留用于备份源文件，同时新站点会在该仓库的README.md文档中更新。</p>\n<p>以上。</p>\n<hr>\n<h4 id=\"简单介绍下本站吧（2021-08-05）\"><a href=\"#简单介绍下本站吧（2021-08-05）\" class=\"headerlink\" title=\"简单介绍下本站吧（2021.08.05）\"></a>简单介绍下本站吧（2021.08.05）</h4><ul>\n<li>本站为Kken同学的个人博客，基本由Kken同学一人打理。</li>\n<li>Kken同学又懒又菜，平日只会打游戏、看纸片人，所以文章更新佛系。</li>\n<li>本站所更新的内容包括但不限于：技术、生活、笔记、牢骚。。。。。。</li>\n<li>本站提供RSS订阅，看见侧边栏那个RSS图标没，就是那个，<del>虽然不知道RSS是啥</del>。</li>\n<li>本站使用<a href=\"https://hexo.io/zh-cn/\">Hexo</a>框架和<a href=\"https://github.com/YunYouJun/hexo-theme-yun/\">Yun</a>主题，十分简单，有手就行，顺便安利一波这个主题，挺好看的。</li>\n<li>本站部署在某大型同性交友网站<a href=\"https://github.com/\">GitHub</a>上，GitHub Pages真香。</li>\n<li>本站开源，点击侧边栏中那个像盒子一样的图标即可跳转至源文件所在的GitHub仓库，<del>欢迎与站长对线</del></li>\n</ul>\n<blockquote>\n<p>本站域名为对应的GitHub仓库名，若有了新的域名将会在仓库的hexo分支的README.md文档中更新说明，同时在该页面也会更新，其他重大变动都会在该页进行说明😀</p>\n</blockquote>\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h3 id=\"本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能\"><a href=\"#本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能\" class=\"headerlink\" title=\"本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能\"></a>本站于2021年7月28日开始搭建，2021年8月5日基本完善了屑站长想完善的功能</h3><blockquote>\n<p>别问，问就是站长太懒，三天打鱼两天晒网</p>\n</blockquote>\n<h4 id=\"域名出了点问题，站长选择摆烂（2021-08-18）\"><a href=\"#域名出了点问题，站长选择摆烂（2021-08-18）\" class=\"headerlink\" title=\"域名出了点问题，站长选择摆烂（2021.08.18）\"></a>域名出了点问题，站长选择摆烂（2021.08.18）</h4><p>不知道怎么回事，可能是解析有问题吧，自己瞎几把搞不会了，反正也只是自己写着玩，就用GitHub的域名好了，还免费，摆烂摆烂</p>\n<p>以上</p>\n<hr>\n<h4 id=\"好消息好消息！（2021-08-17）\"><a href=\"#好消息好消息！（2021-08-17）\" class=\"headerlink\" title=\"好消息好消息！（2021.08.17）\"></a>好消息好消息！（2021.08.17）</h4><p>本站有自己的域名了！不过服务器由于过于玄妙站长没调教明白（<del>本来部署好了结果自己瞎✔8整又整得无法访问了</del>），所以最终采用的解决方案是把域名解析到GitHub Pages，网站仍然部署在GitHub上，这样还省钱，只要给域名续费就好了，之前准备的服务器站长打算用来练习Linux的操作，然后部署开发环境之后学习开发用，总之就是暂时不拿来部署网站了，等到对这方面知识了解更深之后再过来好好研究</p>\n<p>以上</p>\n<hr>\n<h4 id=\"通知一个事儿（2021-08-08）\"><a href=\"#通知一个事儿（2021-08-08）\" class=\"headerlink\" title=\"通知一个事儿（2021.08.08）\"></a>通知一个事儿（2021.08.08）</h4><p>由于GitHub在国内访问速度过于感人，屑站长在阿里云上整了台服务器，正在激情调教中，同时也注册了域名，待域名备案完成，服务器调教成功后可能会把站点部署到服务器上，到时候这个站可能会暂停使用，当然仓库仍然保留用于备份源文件，同时新站点会在该仓库的README.md文档中更新。</p>\n<p>以上。</p>\n<hr>\n<h4 id=\"简单介绍下本站吧（2021-08-05）\"><a href=\"#简单介绍下本站吧（2021-08-05）\" class=\"headerlink\" title=\"简单介绍下本站吧（2021.08.05）\"></a>简单介绍下本站吧（2021.08.05）</h4><ul>\n<li>本站为Kken同学的个人博客，基本由Kken同学一人打理。</li>\n<li>Kken同学又懒又菜，平日只会打游戏、看纸片人，所以文章更新佛系。</li>\n<li>本站所更新的内容包括但不限于：技术、生活、笔记、牢骚。。。。。。</li>\n<li>本站提供RSS订阅，看见侧边栏那个RSS图标没，就是那个，<del>虽然不知道RSS是啥</del>。</li>\n<li>本站使用<a href=\"https://hexo.io/zh-cn/\">Hexo</a>框架和<a href=\"https://github.com/YunYouJun/hexo-theme-yun/\">Yun</a>主题，十分简单，有手就行，顺便安利一波这个主题，挺好看的。</li>\n<li>本站部署在某大型同性交友网站<a href=\"https://github.com/\">GitHub</a>上，GitHub Pages真香。</li>\n<li>本站开源，点击侧边栏中那个像盒子一样的图标即可跳转至源文件所在的GitHub仓库，<del>欢迎与站长对线</del></li>\n</ul>\n<blockquote>\n<p>本站域名为对应的GitHub仓库名，若有了新的域名将会在仓库的hexo分支的README.md文档中更新说明，同时在该页面也会更新，其他重大变动都会在该页进行说明😀</p>\n</blockquote>\n"},{"date":"2021-07-29T14:01:52.000Z","comments":0,"type":"tags","_content":"\n","source":"tags/index.md","raw":"---\n\ndate: 2021-07-29 22:01:52\n\ncomments: false\n\ntype: tags\n\n---\n\n","updated":"2021-07-29T14:10:16.626Z","path":"tags/index.html","title":"","layout":"page","_id":"cksq1dwrk000acsvjerfcbrch","content":"","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":""}],"Post":[{"title":"Java学习笔记-初识Java","update":"2021-08-23T17:07:08.000Z","_content":"\n## Java 特性与优势\n\n+ 简单性\n+ 面向对象\n+ 可移植性（**跨平台**）：Write once, run anywhere.\n+ 高性能\n+ 分布式\n+ 动态性：反射机制\n+ 多线程\n+ 安全性\n+ 健壮性\n\n## Java 三大版本\n\n+ `JavaSE`：标准版（桌面程序，控制台开发......）\n+ `JavaME`：嵌入式开发（手机，小家电......）\n+ `JavaEE`：企业级开发（web端，服务器开发......）\n\n## JDK、JRE、JVM 初识\n\n+ `JDK`：Java Development Kit\n+ `JRE`：Java Runtime Environment\n+ `JVM`：Java Virtual Machine\n\n> `JRE` 扩充了一些开发工具后成为` JDK`\n>\n> **JVM** 是 Java 跨平台的核心\n\n## Hello World \n\n`HelloWord` 的 `Java`实现\n\n```java\npublic class HelloWorld{\n\tpublic static void main(String[] args){\n\t\tSystem.out.println(\"Hello, World!\");\n\t}\n}\n```\n\n在命令行窗口中运行命令\n\n```sh\njavac HelloWorld.java\n# 在对应目录下运行cmd，将会生成一个.class文件\njava HelloWorld\n# 这里不用加后缀\n```\n\n运行成功后将打印\n\n```sh\nHello, World!\n```\n\n","source":"_posts/Java-note-1.md","raw":"---\ntitle: Java学习笔记-初识Java\nupdate: 2021-08-24 01:07:08\ntags: \n  - Java\n  - 学习\ncategories:\n  - 学习笔记\n  - Java笔记\n---\n\n## Java 特性与优势\n\n+ 简单性\n+ 面向对象\n+ 可移植性（**跨平台**）：Write once, run anywhere.\n+ 高性能\n+ 分布式\n+ 动态性：反射机制\n+ 多线程\n+ 安全性\n+ 健壮性\n\n## Java 三大版本\n\n+ `JavaSE`：标准版（桌面程序，控制台开发......）\n+ `JavaME`：嵌入式开发（手机，小家电......）\n+ `JavaEE`：企业级开发（web端，服务器开发......）\n\n## JDK、JRE、JVM 初识\n\n+ `JDK`：Java Development Kit\n+ `JRE`：Java Runtime Environment\n+ `JVM`：Java Virtual Machine\n\n> `JRE` 扩充了一些开发工具后成为` JDK`\n>\n> **JVM** 是 Java 跨平台的核心\n\n## Hello World \n\n`HelloWord` 的 `Java`实现\n\n```java\npublic class HelloWorld{\n\tpublic static void main(String[] args){\n\t\tSystem.out.println(\"Hello, World!\");\n\t}\n}\n```\n\n在命令行窗口中运行命令\n\n```sh\njavac HelloWorld.java\n# 在对应目录下运行cmd，将会生成一个.class文件\njava HelloWorld\n# 这里不用加后缀\n```\n\n运行成功后将打印\n\n```sh\nHello, World!\n```\n\n","slug":"Java-note-1","published":1,"date":"2021-08-23T17:05:41.824Z","updated":"2021-08-24T08:26:00.435Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksq1dwr60001csvjeq7uc9oc","content":"<h2 id=\"Java-特性与优势\"><a href=\"#Java-特性与优势\" class=\"headerlink\" title=\"Java 特性与优势\"></a>Java 特性与优势</h2><ul>\n<li>简单性</li>\n<li>面向对象</li>\n<li>可移植性（<strong>跨平台</strong>）：Write once, run anywhere.</li>\n<li>高性能</li>\n<li>分布式</li>\n<li>动态性：反射机制</li>\n<li>多线程</li>\n<li>安全性</li>\n<li>健壮性</li>\n</ul>\n<h2 id=\"Java-三大版本\"><a href=\"#Java-三大版本\" class=\"headerlink\" title=\"Java 三大版本\"></a>Java 三大版本</h2><ul>\n<li><code>JavaSE</code>：标准版（桌面程序，控制台开发……）</li>\n<li><code>JavaME</code>：嵌入式开发（手机，小家电……）</li>\n<li><code>JavaEE</code>：企业级开发（web端，服务器开发……）</li>\n</ul>\n<h2 id=\"JDK、JRE、JVM-初识\"><a href=\"#JDK、JRE、JVM-初识\" class=\"headerlink\" title=\"JDK、JRE、JVM 初识\"></a>JDK、JRE、JVM 初识</h2><ul>\n<li><code>JDK</code>：Java Development Kit</li>\n<li><code>JRE</code>：Java Runtime Environment</li>\n<li><code>JVM</code>：Java Virtual Machine</li>\n</ul>\n<blockquote>\n<p><code>JRE</code> 扩充了一些开发工具后成为<code> JDK</code></p>\n<p><strong>JVM</strong> 是 Java 跨平台的核心</p>\n</blockquote>\n<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h2><p><code>HelloWord</code> 的 <code>Java</code>实现</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>在命令行窗口中运行命令</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">javac HelloWorld.java\n# 在对应目录下运行cmd，将会生成一个.class文件\njava HelloWorld\n# 这里不用加后缀</code></pre>\n\n<p>运行成功后将打印</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">Hello, World!</code></pre>\n\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h2 id=\"Java-特性与优势\"><a href=\"#Java-特性与优势\" class=\"headerlink\" title=\"Java 特性与优势\"></a>Java 特性与优势</h2><ul>\n<li>简单性</li>\n<li>面向对象</li>\n<li>可移植性（<strong>跨平台</strong>）：Write once, run anywhere.</li>\n<li>高性能</li>\n<li>分布式</li>\n<li>动态性：反射机制</li>\n<li>多线程</li>\n<li>安全性</li>\n<li>健壮性</li>\n</ul>\n<h2 id=\"Java-三大版本\"><a href=\"#Java-三大版本\" class=\"headerlink\" title=\"Java 三大版本\"></a>Java 三大版本</h2><ul>\n<li><code>JavaSE</code>：标准版（桌面程序，控制台开发……）</li>\n<li><code>JavaME</code>：嵌入式开发（手机，小家电……）</li>\n<li><code>JavaEE</code>：企业级开发（web端，服务器开发……）</li>\n</ul>\n<h2 id=\"JDK、JRE、JVM-初识\"><a href=\"#JDK、JRE、JVM-初识\" class=\"headerlink\" title=\"JDK、JRE、JVM 初识\"></a>JDK、JRE、JVM 初识</h2><ul>\n<li><code>JDK</code>：Java Development Kit</li>\n<li><code>JRE</code>：Java Runtime Environment</li>\n<li><code>JVM</code>：Java Virtual Machine</li>\n</ul>\n<blockquote>\n<p><code>JRE</code> 扩充了一些开发工具后成为<code> JDK</code></p>\n<p><strong>JVM</strong> 是 Java 跨平台的核心</p>\n</blockquote>\n<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h2><p><code>HelloWord</code> 的 <code>Java</code>实现</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>在命令行窗口中运行命令</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">javac HelloWorld.java\n# 在对应目录下运行cmd，将会生成一个.class文件\njava HelloWorld\n# 这里不用加后缀</code></pre>\n\n<p>运行成功后将打印</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">Hello, World!</code></pre>\n\n"},{"title":"Java学习笔记-Java基础","date":"2021-08-23T18:23:48.000Z","_content":"\n## 注释e\n\n+ 单行注释\n\n  ```java\n  // 单行注释\n  ```\n\n+ 多行注释\n\n  ```java\n  /*\n  多行注释\n  多行注释\n  */\n  ```\n\n+ 文档注释（JavaDoc）\n\n  ```java\n  /**\n   *@Description\n   *@Author\n   */\n  ```\n\n## 标识符与关键字\n\n### 关键字\n\nJava 语法中自带的单词，如 public，int，package等\n\n### 标识符\n\n类名、变量名以及方法名都被称为标识符，标识符不能以关键字命名\n\n+ 标识符以大小写字母、美元符号（$）、下划线（_）开头\n+ 首字符后可以使用大小写字母、美元符号、下划线、数字\n+ 标识符大小写敏感\n+ 不建议使用中文与拼音命名\n\n## 数据类型\n\n### 基本类型\n\n+ 数值类型\n\n  + 整数类型\n\n    + byte：占1个字节\n    + short：占2个字节\n    + int：占4个字节\n    + long：占8个字节\n\n    > 二进制 `0b`，八进制`0`，十六进制`0x`\n\n  + 浮点类型\n\n    + float：占4个字节\n    + double：占8个字节\n\n    > 浮点数有误差，最好不要使用浮点数进行比较操作\n\n  + 字符类型\n\n    + char：占2个字节\n\n    > unicode编码 占2字节\n    >\n    > 转义字符：\\t \\n 等\n\n+ boolean类型：占一位，只有 `true`和`false`两种取值\n\n### 引用类型\n\n+ 类\n+ 接口\n+ 数组\n\n## 类型转换\n\nbyte, short, char -> int -> long -> float -> double\n\n> 一般从小到大转换\n\n### 强制类型转换\n\neg：\n\n```java\nint i = 10;\nbyte b = (byte)i;\n```\n\n高转低用强制转换，注意内存溢出与精度问题\n\n### 自动类型转换\n\neg：\n\n```java\nchar c = 'a';\nint i = c+1;\n```\n\n低到高用自动转换\n\n> 在计算比较大的数字时注意溢出的问题\n\n## 变量、常量、作用域\n\n### 变量\n\n最基本的存储单元，包括变量名、变量类型和作用域\n\n+ 每个变量都有类型，可以是基本类型，也可以是引用类型\n+ 变量名为合法的标识符\n\n### 常量\n\n初始化后不再改变，一般用`final`+`类型`+`常量名`定义\n\n```java\nfinal double PI = 3.14\n```\n\n常量名一般用大写字符\n\n### 作用域\n\n+ 类变量：作用域更大\n+ 实例变量：从属于对象，有默认值\n+ 局部变量：作用于方法内，需要初始化\n\n> **变量命名规范**\n>\n> + 见名知意\n> + 类变量：首字母小写和驼峰原则：monthSalary\n> + 局部变量：首字母小写和驼峰原则\n> + 常量：大写字母和下划线\n> + 类名：首字母大写和驼峰原则：HelloWorld\n> + 方法名：首字母小写和驼峰原则：setName\n\n## 运算符\n\n+ 算术运算符：+ , - , * , / , % , ++ , --\n\n+ 赋值运算符：=\n\n+ 关系运算符：> , < , >= , <= , == , != , instaceof\n\n  > instanceof是Java中的二元运算符，左边是对象，右边是类；当对象是右边类或子类所创建对象时，返回true；否则，返回false\n\n+ 逻辑运算符：&&，||， !\n\n+ 位运算符：&，|，^，~，>>，<<，>>>\n\n+ 条件运算符：? : \n\n+ 扩展赋值运算符：+=，-=，*=，/=\n\n## 包机制\n\n用于更好的组织类\n\n语法\n\n```java\npackage pkg1[.pkg2[.pkg3...]];\n// 三个包存在包含关系\n```\n\n一般用域名倒置作为包名\n\n当使用某个包的成员时，需要导入该包\n\n```java\nimport package1[.package2...].(classname|*);\n// *表示导入包中所有的类\n```\n\n## JavaDoc\n\n+ javadoc命令用于生成自己的API文档\n+ 参数\n  + @author 作者\n  + @version 版本\n  + @since jdk版本\n  + @param 参数\n  + @return 返回值情况\n  + @throws 异常抛出情况\n","source":"_posts/Java-note-2.md","raw":"---\ntitle: Java学习笔记-Java基础\ndate: 2021-08-24 02:23:48\ntags: \n  - Java\n  - 学习\ncategories:\n  - 学习笔记\n  - Java笔记\n---\n\n## 注释e\n\n+ 单行注释\n\n  ```java\n  // 单行注释\n  ```\n\n+ 多行注释\n\n  ```java\n  /*\n  多行注释\n  多行注释\n  */\n  ```\n\n+ 文档注释（JavaDoc）\n\n  ```java\n  /**\n   *@Description\n   *@Author\n   */\n  ```\n\n## 标识符与关键字\n\n### 关键字\n\nJava 语法中自带的单词，如 public，int，package等\n\n### 标识符\n\n类名、变量名以及方法名都被称为标识符，标识符不能以关键字命名\n\n+ 标识符以大小写字母、美元符号（$）、下划线（_）开头\n+ 首字符后可以使用大小写字母、美元符号、下划线、数字\n+ 标识符大小写敏感\n+ 不建议使用中文与拼音命名\n\n## 数据类型\n\n### 基本类型\n\n+ 数值类型\n\n  + 整数类型\n\n    + byte：占1个字节\n    + short：占2个字节\n    + int：占4个字节\n    + long：占8个字节\n\n    > 二进制 `0b`，八进制`0`，十六进制`0x`\n\n  + 浮点类型\n\n    + float：占4个字节\n    + double：占8个字节\n\n    > 浮点数有误差，最好不要使用浮点数进行比较操作\n\n  + 字符类型\n\n    + char：占2个字节\n\n    > unicode编码 占2字节\n    >\n    > 转义字符：\\t \\n 等\n\n+ boolean类型：占一位，只有 `true`和`false`两种取值\n\n### 引用类型\n\n+ 类\n+ 接口\n+ 数组\n\n## 类型转换\n\nbyte, short, char -> int -> long -> float -> double\n\n> 一般从小到大转换\n\n### 强制类型转换\n\neg：\n\n```java\nint i = 10;\nbyte b = (byte)i;\n```\n\n高转低用强制转换，注意内存溢出与精度问题\n\n### 自动类型转换\n\neg：\n\n```java\nchar c = 'a';\nint i = c+1;\n```\n\n低到高用自动转换\n\n> 在计算比较大的数字时注意溢出的问题\n\n## 变量、常量、作用域\n\n### 变量\n\n最基本的存储单元，包括变量名、变量类型和作用域\n\n+ 每个变量都有类型，可以是基本类型，也可以是引用类型\n+ 变量名为合法的标识符\n\n### 常量\n\n初始化后不再改变，一般用`final`+`类型`+`常量名`定义\n\n```java\nfinal double PI = 3.14\n```\n\n常量名一般用大写字符\n\n### 作用域\n\n+ 类变量：作用域更大\n+ 实例变量：从属于对象，有默认值\n+ 局部变量：作用于方法内，需要初始化\n\n> **变量命名规范**\n>\n> + 见名知意\n> + 类变量：首字母小写和驼峰原则：monthSalary\n> + 局部变量：首字母小写和驼峰原则\n> + 常量：大写字母和下划线\n> + 类名：首字母大写和驼峰原则：HelloWorld\n> + 方法名：首字母小写和驼峰原则：setName\n\n## 运算符\n\n+ 算术运算符：+ , - , * , / , % , ++ , --\n\n+ 赋值运算符：=\n\n+ 关系运算符：> , < , >= , <= , == , != , instaceof\n\n  > instanceof是Java中的二元运算符，左边是对象，右边是类；当对象是右边类或子类所创建对象时，返回true；否则，返回false\n\n+ 逻辑运算符：&&，||， !\n\n+ 位运算符：&，|，^，~，>>，<<，>>>\n\n+ 条件运算符：? : \n\n+ 扩展赋值运算符：+=，-=，*=，/=\n\n## 包机制\n\n用于更好的组织类\n\n语法\n\n```java\npackage pkg1[.pkg2[.pkg3...]];\n// 三个包存在包含关系\n```\n\n一般用域名倒置作为包名\n\n当使用某个包的成员时，需要导入该包\n\n```java\nimport package1[.package2...].(classname|*);\n// *表示导入包中所有的类\n```\n\n## JavaDoc\n\n+ javadoc命令用于生成自己的API文档\n+ 参数\n  + @author 作者\n  + @version 版本\n  + @since jdk版本\n  + @param 参数\n  + @return 返回值情况\n  + @throws 异常抛出情况\n","slug":"Java-note-2","published":1,"updated":"2021-08-24T08:26:08.797Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksq1dwrb0003csvj5l54f0hb","content":"<h2 id=\"注释e\"><a href=\"#注释e\" class=\"headerlink\" title=\"注释e\"></a>注释e</h2><ul>\n<li><p>单行注释</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 单行注释</span></code></pre></li>\n<li><p>多行注释</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/*\n多行注释\n多行注释\n*/</span></code></pre></li>\n<li><p>文档注释（JavaDoc）</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n *@Description\n *@Author\n */</span></code></pre></li>\n</ul>\n<h2 id=\"标识符与关键字\"><a href=\"#标识符与关键字\" class=\"headerlink\" title=\"标识符与关键字\"></a>标识符与关键字</h2><h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><p>Java 语法中自带的单词，如 public，int，package等</p>\n<h3 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h3><p>类名、变量名以及方法名都被称为标识符，标识符不能以关键字命名</p>\n<ul>\n<li>标识符以大小写字母、美元符号（$）、下划线（_）开头</li>\n<li>首字符后可以使用大小写字母、美元符号、下划线、数字</li>\n<li>标识符大小写敏感</li>\n<li>不建议使用中文与拼音命名</li>\n</ul>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><h3 id=\"基本类型\"><a href=\"#基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h3><ul>\n<li><p>数值类型</p>\n<ul>\n<li><p>整数类型</p>\n<ul>\n<li>byte：占1个字节</li>\n<li>short：占2个字节</li>\n<li>int：占4个字节</li>\n<li>long：占8个字节</li>\n</ul>\n<blockquote>\n<p>二进制 <code>0b</code>，八进制<code>0</code>，十六进制<code>0x</code></p>\n</blockquote>\n</li>\n<li><p>浮点类型</p>\n<ul>\n<li>float：占4个字节</li>\n<li>double：占8个字节</li>\n</ul>\n<blockquote>\n<p>浮点数有误差，最好不要使用浮点数进行比较操作</p>\n</blockquote>\n</li>\n<li><p>字符类型</p>\n<ul>\n<li>char：占2个字节</li>\n</ul>\n<blockquote>\n<p>unicode编码 占2字节</p>\n<p>转义字符：\\t \\n 等</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>boolean类型：占一位，只有 <code>true</code>和<code>false</code>两种取值</p>\n</li>\n</ul>\n<h3 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h3><ul>\n<li>类</li>\n<li>接口</li>\n<li>数组</li>\n</ul>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p>byte, short, char -&gt; int -&gt; long -&gt; float -&gt; double</p>\n<blockquote>\n<p>一般从小到大转换</p>\n</blockquote>\n<h3 id=\"强制类型转换\"><a href=\"#强制类型转换\" class=\"headerlink\" title=\"强制类型转换\"></a>强制类型转换</h3><p>eg：</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">byte</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">;</span></code></pre>\n\n<p>高转低用强制转换，注意内存溢出与精度问题</p>\n<h3 id=\"自动类型转换\"><a href=\"#自动类型转换\" class=\"headerlink\" title=\"自动类型转换\"></a>自动类型转换</h3><p>eg：</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> c<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>低到高用自动转换</p>\n<blockquote>\n<p>在计算比较大的数字时注意溢出的问题</p>\n</blockquote>\n<h2 id=\"变量、常量、作用域\"><a href=\"#变量、常量、作用域\" class=\"headerlink\" title=\"变量、常量、作用域\"></a>变量、常量、作用域</h2><h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>最基本的存储单元，包括变量名、变量类型和作用域</p>\n<ul>\n<li>每个变量都有类型，可以是基本类型，也可以是引用类型</li>\n<li>变量名为合法的标识符</li>\n</ul>\n<h3 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h3><p>初始化后不再改变，一般用<code>final</code>+<code>类型</code>+<code>常量名</code>定义</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token keyword\">double</span> PI <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span></code></pre>\n\n<p>常量名一般用大写字符</p>\n<h3 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h3><ul>\n<li>类变量：作用域更大</li>\n<li>实例变量：从属于对象，有默认值</li>\n<li>局部变量：作用于方法内，需要初始化</li>\n</ul>\n<blockquote>\n<p><strong>变量命名规范</strong></p>\n<ul>\n<li>见名知意</li>\n<li>类变量：首字母小写和驼峰原则：monthSalary</li>\n<li>局部变量：首字母小写和驼峰原则</li>\n<li>常量：大写字母和下划线</li>\n<li>类名：首字母大写和驼峰原则：HelloWorld</li>\n<li>方法名：首字母小写和驼峰原则：setName</li>\n</ul>\n</blockquote>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><ul>\n<li><p>算术运算符：+ , - , * , / , % , ++ , –</p>\n</li>\n<li><p>赋值运算符：=</p>\n</li>\n<li><p>关系运算符：&gt; , &lt; , &gt;= , &lt;= , == , != , instaceof</p>\n<blockquote>\n<p>instanceof是Java中的二元运算符，左边是对象，右边是类；当对象是右边类或子类所创建对象时，返回true；否则，返回false</p>\n</blockquote>\n</li>\n<li><p>逻辑运算符：&amp;&amp;，||， !</p>\n</li>\n<li><p>位运算符：&amp;，|，^，~，&gt;&gt;，&lt;&lt;，&gt;&gt;&gt;</p>\n</li>\n<li><p>条件运算符：? : </p>\n</li>\n<li><p>扩展赋值运算符：+=，-=，*=，/=</p>\n</li>\n</ul>\n<h2 id=\"包机制\"><a href=\"#包机制\" class=\"headerlink\" title=\"包机制\"></a>包机制</h2><p>用于更好的组织类</p>\n<p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">pkg1</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>pkg2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>pkg3<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 三个包存在包含关系</span></code></pre>\n\n<p>一般用域名倒置作为包名</p>\n<p>当使用某个包的成员时，需要导入该包</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">package1</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>package2<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>classname<span class=\"token operator\">|</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// *表示导入包中所有的类</span></code></pre>\n\n<h2 id=\"JavaDoc\"><a href=\"#JavaDoc\" class=\"headerlink\" title=\"JavaDoc\"></a>JavaDoc</h2><ul>\n<li>javadoc命令用于生成自己的API文档</li>\n<li>参数<ul>\n<li>@author 作者</li>\n<li>@version 版本</li>\n<li>@since jdk版本</li>\n<li>@param 参数</li>\n<li>@return 返回值情况</li>\n<li>@throws 异常抛出情况</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h2 id=\"注释e\"><a href=\"#注释e\" class=\"headerlink\" title=\"注释e\"></a>注释e</h2><ul>\n<li><p>单行注释</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 单行注释</span></code></pre></li>\n<li><p>多行注释</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/*\n多行注释\n多行注释\n*/</span></code></pre></li>\n<li><p>文档注释（JavaDoc）</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n *@Description\n *@Author\n */</span></code></pre></li>\n</ul>\n<h2 id=\"标识符与关键字\"><a href=\"#标识符与关键字\" class=\"headerlink\" title=\"标识符与关键字\"></a>标识符与关键字</h2><h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><p>Java 语法中自带的单词，如 public，int，package等</p>\n<h3 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h3><p>类名、变量名以及方法名都被称为标识符，标识符不能以关键字命名</p>\n<ul>\n<li>标识符以大小写字母、美元符号（$）、下划线（_）开头</li>\n<li>首字符后可以使用大小写字母、美元符号、下划线、数字</li>\n<li>标识符大小写敏感</li>\n<li>不建议使用中文与拼音命名</li>\n</ul>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><h3 id=\"基本类型\"><a href=\"#基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h3><ul>\n<li><p>数值类型</p>\n<ul>\n<li><p>整数类型</p>\n<ul>\n<li>byte：占1个字节</li>\n<li>short：占2个字节</li>\n<li>int：占4个字节</li>\n<li>long：占8个字节</li>\n</ul>\n<blockquote>\n<p>二进制 <code>0b</code>，八进制<code>0</code>，十六进制<code>0x</code></p>\n</blockquote>\n</li>\n<li><p>浮点类型</p>\n<ul>\n<li>float：占4个字节</li>\n<li>double：占8个字节</li>\n</ul>\n<blockquote>\n<p>浮点数有误差，最好不要使用浮点数进行比较操作</p>\n</blockquote>\n</li>\n<li><p>字符类型</p>\n<ul>\n<li>char：占2个字节</li>\n</ul>\n<blockquote>\n<p>unicode编码 占2字节</p>\n<p>转义字符：\\t \\n 等</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>boolean类型：占一位，只有 <code>true</code>和<code>false</code>两种取值</p>\n</li>\n</ul>\n<h3 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h3><ul>\n<li>类</li>\n<li>接口</li>\n<li>数组</li>\n</ul>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p>byte, short, char -&gt; int -&gt; long -&gt; float -&gt; double</p>\n<blockquote>\n<p>一般从小到大转换</p>\n</blockquote>\n<h3 id=\"强制类型转换\"><a href=\"#强制类型转换\" class=\"headerlink\" title=\"强制类型转换\"></a>强制类型转换</h3><p>eg：</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">byte</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">;</span></code></pre>\n\n<p>高转低用强制转换，注意内存溢出与精度问题</p>\n<h3 id=\"自动类型转换\"><a href=\"#自动类型转换\" class=\"headerlink\" title=\"自动类型转换\"></a>自动类型转换</h3><p>eg：</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> c<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>低到高用自动转换</p>\n<blockquote>\n<p>在计算比较大的数字时注意溢出的问题</p>\n</blockquote>\n<h2 id=\"变量、常量、作用域\"><a href=\"#变量、常量、作用域\" class=\"headerlink\" title=\"变量、常量、作用域\"></a>变量、常量、作用域</h2><h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>最基本的存储单元，包括变量名、变量类型和作用域</p>\n<ul>\n<li>每个变量都有类型，可以是基本类型，也可以是引用类型</li>\n<li>变量名为合法的标识符</li>\n</ul>\n<h3 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h3><p>初始化后不再改变，一般用<code>final</code>+<code>类型</code>+<code>常量名</code>定义</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token keyword\">double</span> PI <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span></code></pre>\n\n<p>常量名一般用大写字符</p>\n<h3 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h3><ul>\n<li>类变量：作用域更大</li>\n<li>实例变量：从属于对象，有默认值</li>\n<li>局部变量：作用于方法内，需要初始化</li>\n</ul>\n<blockquote>\n<p><strong>变量命名规范</strong></p>\n<ul>\n<li>见名知意</li>\n<li>类变量：首字母小写和驼峰原则：monthSalary</li>\n<li>局部变量：首字母小写和驼峰原则</li>\n<li>常量：大写字母和下划线</li>\n<li>类名：首字母大写和驼峰原则：HelloWorld</li>\n<li>方法名：首字母小写和驼峰原则：setName</li>\n</ul>\n</blockquote>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><ul>\n<li><p>算术运算符：+ , - , * , / , % , ++ , –</p>\n</li>\n<li><p>赋值运算符：=</p>\n</li>\n<li><p>关系运算符：&gt; , &lt; , &gt;= , &lt;= , == , != , instaceof</p>\n<blockquote>\n<p>instanceof是Java中的二元运算符，左边是对象，右边是类；当对象是右边类或子类所创建对象时，返回true；否则，返回false</p>\n</blockquote>\n</li>\n<li><p>逻辑运算符：&amp;&amp;，||， !</p>\n</li>\n<li><p>位运算符：&amp;，|，^，~，&gt;&gt;，&lt;&lt;，&gt;&gt;&gt;</p>\n</li>\n<li><p>条件运算符：? : </p>\n</li>\n<li><p>扩展赋值运算符：+=，-=，*=，/=</p>\n</li>\n</ul>\n<h2 id=\"包机制\"><a href=\"#包机制\" class=\"headerlink\" title=\"包机制\"></a>包机制</h2><p>用于更好的组织类</p>\n<p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">pkg1</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>pkg2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>pkg3<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 三个包存在包含关系</span></code></pre>\n\n<p>一般用域名倒置作为包名</p>\n<p>当使用某个包的成员时，需要导入该包</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">package1</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>package2<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>classname<span class=\"token operator\">|</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// *表示导入包中所有的类</span></code></pre>\n\n<h2 id=\"JavaDoc\"><a href=\"#JavaDoc\" class=\"headerlink\" title=\"JavaDoc\"></a>JavaDoc</h2><ul>\n<li>javadoc命令用于生成自己的API文档</li>\n<li>参数<ul>\n<li>@author 作者</li>\n<li>@version 版本</li>\n<li>@since jdk版本</li>\n<li>@param 参数</li>\n<li>@return 返回值情况</li>\n<li>@throws 异常抛出情况</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Java学习笔记-Java流程控制","date":"2021-08-24T04:59:00.000Z","_content":"\n## Scanner 对象\n\nJava5 在 `java.util.Scanner` 中提供了 `Scanner` 类，可以获取用户输入，使用之前要导入这个包\n\n```java\nimport java.util.Scanner;\n```\n\n基本语法\n\n```java\n//创建一个名叫 s 的 Scanner 对象用于获取输入\nScanner s = new Scanner(System.in);\n// 将接收到的输入赋给变量str\nString str = s.next();\n```\n\n通过`Scanner`类的`next()`与`nextLine()`方法获取输入的字符串，读取前一般需要用`hasNext()`与`hasNextLine()`判断是否还有输入数据\n\n+ `next()`\n  1. 一定要读取到有效字符才可以结束输入\n  2. 对输入有效字符之前遇到空白，`next()`方法会将其自动去掉\n  3. 只有输入有效字符后才将其后面输入的空白作为分隔符或结束符\n  4. **`next()`不能得到带有空格的字符串**\n\n+ `nextLine()`\n  1. 以`Enter`为结束符，也就是说`nextLine()`返回的是输入回车之前的字符\n  2. 可以得到带有空格的字符串\n\n> 当需要输入整数和小数时，可以使用`nextInt()`和`nextFloat()`等方法，其他数据类型依次类推。\n\n## 顺序结构\n\n最基本的结构，最简单的结构，语句从上到下依次执行\n\n**是所有算法都会用到的结构**\n\n## 选择结构\n\n### if 单选择结构\n\n语法\n\n```java\nif (布尔表达式){\n\t//执行语句\n}\n```\n\n### if 双选择结构\n\n语法\n\n```java\nif(布尔表达式){\n    //执行语句\n}else{\n    //执行语句\n}\n```\n\n### if 多选择结构\n\n语法\n\n```java\nif (布尔表达式1){\n    //执行语句\n}else if (布尔表达式2){\n    //执行语句\n}else if (布尔表达式3){\n    //执行语句\n}else{\n    //执行语句\n}\n```\n\n### if 嵌套结构\n\n语法\n\n```java\nif (布尔表达式1){\n    // 执行语句\n    if (布尔表达式2){\n        // 执行语句\n    }\n}\n```\n\n### switch 选择结构\n\n语法\n\n```java\nswitch(expression){\n    case value:\n        //语句\n        break; //可选\n    case value:\n        //语句\n        break; //可选\n    default: //可选\n        // 语句\n}\n```\n\n**自 JavaSE 7 开始支持字符串比较**\n\n## 循环结构\n\n### while 循环\n\n结构\n\n```java\nwhile(布尔表达式) {\n    // 执行语句\n}\n```\n\n当布尔表达式为`true`是进入循环执行语句\n\n**大多数情况需要循环停止下来，需要一个让表达式失效的方式来结束循环**\n\n### do...while 循环\n\n结构\n\n```java\ndo {\n    //执行语句\n} while(布尔表达式)\n```\n\nde...while 循环至少执行一次\n\n### for 循环\n\n结构\n\n```java\nfor(初始化; 布尔表达式; 更新) {\n    // 执行语句\n}\n```\n\n### 增强 for 循环\n\n主要用于遍历数组，JavaSE 5 引入\n\n结构\n\n```java\nfor(声明语句 : 表达式){\n    //执行语句\n}\n```\n\n>声明语句：声明新的局部变量，该变量的类型必须和数组元素类型匹配。其作用域限定在循环语句块，其值与此时的数组元素的值相等\n>\n>表达式：表达式是要访问的数组名，或者是返回值为数组的方法\n\n## break continue\n\n### break\n\n用于**强制**退出循环，或在`switch`语句中防止`case`穿透\n\n### continue\n\n用于终止当次循环，但仍会执行下一次循环\n\n> Java 没有`goto`，但可以通过`label`标签和`continue`&`break`实现\n\n","source":"_posts/Java-note-3.md","raw":"---\ntitle: Java学习笔记-Java流程控制\ndate: 2021-08-24 12:59:00\ntags: \n  - Java\n  - 学习\ncategories:\n  - 学习笔记\n  - Java笔记\n---\n\n## Scanner 对象\n\nJava5 在 `java.util.Scanner` 中提供了 `Scanner` 类，可以获取用户输入，使用之前要导入这个包\n\n```java\nimport java.util.Scanner;\n```\n\n基本语法\n\n```java\n//创建一个名叫 s 的 Scanner 对象用于获取输入\nScanner s = new Scanner(System.in);\n// 将接收到的输入赋给变量str\nString str = s.next();\n```\n\n通过`Scanner`类的`next()`与`nextLine()`方法获取输入的字符串，读取前一般需要用`hasNext()`与`hasNextLine()`判断是否还有输入数据\n\n+ `next()`\n  1. 一定要读取到有效字符才可以结束输入\n  2. 对输入有效字符之前遇到空白，`next()`方法会将其自动去掉\n  3. 只有输入有效字符后才将其后面输入的空白作为分隔符或结束符\n  4. **`next()`不能得到带有空格的字符串**\n\n+ `nextLine()`\n  1. 以`Enter`为结束符，也就是说`nextLine()`返回的是输入回车之前的字符\n  2. 可以得到带有空格的字符串\n\n> 当需要输入整数和小数时，可以使用`nextInt()`和`nextFloat()`等方法，其他数据类型依次类推。\n\n## 顺序结构\n\n最基本的结构，最简单的结构，语句从上到下依次执行\n\n**是所有算法都会用到的结构**\n\n## 选择结构\n\n### if 单选择结构\n\n语法\n\n```java\nif (布尔表达式){\n\t//执行语句\n}\n```\n\n### if 双选择结构\n\n语法\n\n```java\nif(布尔表达式){\n    //执行语句\n}else{\n    //执行语句\n}\n```\n\n### if 多选择结构\n\n语法\n\n```java\nif (布尔表达式1){\n    //执行语句\n}else if (布尔表达式2){\n    //执行语句\n}else if (布尔表达式3){\n    //执行语句\n}else{\n    //执行语句\n}\n```\n\n### if 嵌套结构\n\n语法\n\n```java\nif (布尔表达式1){\n    // 执行语句\n    if (布尔表达式2){\n        // 执行语句\n    }\n}\n```\n\n### switch 选择结构\n\n语法\n\n```java\nswitch(expression){\n    case value:\n        //语句\n        break; //可选\n    case value:\n        //语句\n        break; //可选\n    default: //可选\n        // 语句\n}\n```\n\n**自 JavaSE 7 开始支持字符串比较**\n\n## 循环结构\n\n### while 循环\n\n结构\n\n```java\nwhile(布尔表达式) {\n    // 执行语句\n}\n```\n\n当布尔表达式为`true`是进入循环执行语句\n\n**大多数情况需要循环停止下来，需要一个让表达式失效的方式来结束循环**\n\n### do...while 循环\n\n结构\n\n```java\ndo {\n    //执行语句\n} while(布尔表达式)\n```\n\nde...while 循环至少执行一次\n\n### for 循环\n\n结构\n\n```java\nfor(初始化; 布尔表达式; 更新) {\n    // 执行语句\n}\n```\n\n### 增强 for 循环\n\n主要用于遍历数组，JavaSE 5 引入\n\n结构\n\n```java\nfor(声明语句 : 表达式){\n    //执行语句\n}\n```\n\n>声明语句：声明新的局部变量，该变量的类型必须和数组元素类型匹配。其作用域限定在循环语句块，其值与此时的数组元素的值相等\n>\n>表达式：表达式是要访问的数组名，或者是返回值为数组的方法\n\n## break continue\n\n### break\n\n用于**强制**退出循环，或在`switch`语句中防止`case`穿透\n\n### continue\n\n用于终止当次循环，但仍会执行下一次循环\n\n> Java 没有`goto`，但可以通过`label`标签和`continue`&`break`实现\n\n","slug":"Java-note-3","published":1,"updated":"2021-08-24T08:26:15.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksq1dwrf0007csvj8kh34ve4","content":"<h2 id=\"Scanner-对象\"><a href=\"#Scanner-对象\" class=\"headerlink\" title=\"Scanner 对象\"></a>Scanner 对象</h2><p>Java5 在 <code>java.util.Scanner</code> 中提供了 <code>Scanner</code> 类，可以获取用户输入，使用之前要导入这个包</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>基本语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//创建一个名叫 s 的 Scanner 对象用于获取输入</span>\n<span class=\"token class-name\">Scanner</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 将接收到的输入赋给变量str</span>\n<span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>通过<code>Scanner</code>类的<code>next()</code>与<code>nextLine()</code>方法获取输入的字符串，读取前一般需要用<code>hasNext()</code>与<code>hasNextLine()</code>判断是否还有输入数据</p>\n<ul>\n<li><p><code>next()</code></p>\n<ol>\n<li>一定要读取到有效字符才可以结束输入</li>\n<li>对输入有效字符之前遇到空白，<code>next()</code>方法会将其自动去掉</li>\n<li>只有输入有效字符后才将其后面输入的空白作为分隔符或结束符</li>\n<li><strong><code>next()</code>不能得到带有空格的字符串</strong></li>\n</ol>\n</li>\n<li><p><code>nextLine()</code></p>\n<ol>\n<li>以<code>Enter</code>为结束符，也就是说<code>nextLine()</code>返回的是输入回车之前的字符</li>\n<li>可以得到带有空格的字符串</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n<p>当需要输入整数和小数时，可以使用<code>nextInt()</code>和<code>nextFloat()</code>等方法，其他数据类型依次类推。</p>\n</blockquote>\n<h2 id=\"顺序结构\"><a href=\"#顺序结构\" class=\"headerlink\" title=\"顺序结构\"></a>顺序结构</h2><p>最基本的结构，最简单的结构，语句从上到下依次执行</p>\n<p><strong>是所有算法都会用到的结构</strong></p>\n<h2 id=\"选择结构\"><a href=\"#选择结构\" class=\"headerlink\" title=\"选择结构\"></a>选择结构</h2><h3 id=\"if-单选择结构\"><a href=\"#if-单选择结构\" class=\"headerlink\" title=\"if 单选择结构\"></a>if 单选择结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"if-双选择结构\"><a href=\"#if-双选择结构\" class=\"headerlink\" title=\"if 双选择结构\"></a>if 双选择结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>布尔表达式<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"if-多选择结构\"><a href=\"#if-多选择结构\" class=\"headerlink\" title=\"if 多选择结构\"></a>if 多选择结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"if-嵌套结构\"><a href=\"#if-嵌套结构\" class=\"headerlink\" title=\"if 嵌套结构\"></a>if 嵌套结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 执行语句</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 执行语句</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"switch-选择结构\"><a href=\"#switch-选择结构\" class=\"headerlink\" title=\"switch 选择结构\"></a>switch 选择结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> value<span class=\"token operator\">:</span>\n        <span class=\"token comment\">//语句</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//可选</span>\n    <span class=\"token keyword\">case</span> value<span class=\"token operator\">:</span>\n        <span class=\"token comment\">//语句</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//可选</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token comment\">//可选</span>\n        <span class=\"token comment\">// 语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><strong>自 JavaSE 7 开始支持字符串比较</strong></p>\n<h2 id=\"循环结构\"><a href=\"#循环结构\" class=\"headerlink\" title=\"循环结构\"></a>循环结构</h2><h3 id=\"while-循环\"><a href=\"#while-循环\" class=\"headerlink\" title=\"while 循环\"></a>while 循环</h3><p>结构</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>布尔表达式<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>当布尔表达式为<code>true</code>是进入循环执行语句</p>\n<p><strong>大多数情况需要循环停止下来，需要一个让表达式失效的方式来结束循环</strong></p>\n<h3 id=\"do…while-循环\"><a href=\"#do…while-循环\" class=\"headerlink\" title=\"do…while 循环\"></a>do…while 循环</h3><p>结构</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>布尔表达式<span class=\"token punctuation\">)</span></code></pre>\n\n<p>de…while 循环至少执行一次</p>\n<h3 id=\"for-循环\"><a href=\"#for-循环\" class=\"headerlink\" title=\"for 循环\"></a>for 循环</h3><p>结构</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>初始化<span class=\"token punctuation\">;</span> 布尔表达式<span class=\"token punctuation\">;</span> 更新<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"增强-for-循环\"><a href=\"#增强-for-循环\" class=\"headerlink\" title=\"增强 for 循环\"></a>增强 for 循环</h3><p>主要用于遍历数组，JavaSE 5 引入</p>\n<p>结构</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>声明语句 <span class=\"token operator\">:</span> 表达式<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<blockquote>\n<p>声明语句：声明新的局部变量，该变量的类型必须和数组元素类型匹配。其作用域限定在循环语句块，其值与此时的数组元素的值相等</p>\n<p>表达式：表达式是要访问的数组名，或者是返回值为数组的方法</p>\n</blockquote>\n<h2 id=\"break-continue\"><a href=\"#break-continue\" class=\"headerlink\" title=\"break continue\"></a>break continue</h2><h3 id=\"break\"><a href=\"#break\" class=\"headerlink\" title=\"break\"></a>break</h3><p>用于<strong>强制</strong>退出循环，或在<code>switch</code>语句中防止<code>case</code>穿透</p>\n<h3 id=\"continue\"><a href=\"#continue\" class=\"headerlink\" title=\"continue\"></a>continue</h3><p>用于终止当次循环，但仍会执行下一次循环</p>\n<blockquote>\n<p>Java 没有<code>goto</code>，但可以通过<code>label</code>标签和<code>continue</code>&amp;<code>break</code>实现</p>\n</blockquote>\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h2 id=\"Scanner-对象\"><a href=\"#Scanner-对象\" class=\"headerlink\" title=\"Scanner 对象\"></a>Scanner 对象</h2><p>Java5 在 <code>java.util.Scanner</code> 中提供了 <code>Scanner</code> 类，可以获取用户输入，使用之前要导入这个包</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>基本语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//创建一个名叫 s 的 Scanner 对象用于获取输入</span>\n<span class=\"token class-name\">Scanner</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 将接收到的输入赋给变量str</span>\n<span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>通过<code>Scanner</code>类的<code>next()</code>与<code>nextLine()</code>方法获取输入的字符串，读取前一般需要用<code>hasNext()</code>与<code>hasNextLine()</code>判断是否还有输入数据</p>\n<ul>\n<li><p><code>next()</code></p>\n<ol>\n<li>一定要读取到有效字符才可以结束输入</li>\n<li>对输入有效字符之前遇到空白，<code>next()</code>方法会将其自动去掉</li>\n<li>只有输入有效字符后才将其后面输入的空白作为分隔符或结束符</li>\n<li><strong><code>next()</code>不能得到带有空格的字符串</strong></li>\n</ol>\n</li>\n<li><p><code>nextLine()</code></p>\n<ol>\n<li>以<code>Enter</code>为结束符，也就是说<code>nextLine()</code>返回的是输入回车之前的字符</li>\n<li>可以得到带有空格的字符串</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n<p>当需要输入整数和小数时，可以使用<code>nextInt()</code>和<code>nextFloat()</code>等方法，其他数据类型依次类推。</p>\n</blockquote>\n<h2 id=\"顺序结构\"><a href=\"#顺序结构\" class=\"headerlink\" title=\"顺序结构\"></a>顺序结构</h2><p>最基本的结构，最简单的结构，语句从上到下依次执行</p>\n<p><strong>是所有算法都会用到的结构</strong></p>\n<h2 id=\"选择结构\"><a href=\"#选择结构\" class=\"headerlink\" title=\"选择结构\"></a>选择结构</h2><h3 id=\"if-单选择结构\"><a href=\"#if-单选择结构\" class=\"headerlink\" title=\"if 单选择结构\"></a>if 单选择结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"if-双选择结构\"><a href=\"#if-双选择结构\" class=\"headerlink\" title=\"if 双选择结构\"></a>if 双选择结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>布尔表达式<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"if-多选择结构\"><a href=\"#if-多选择结构\" class=\"headerlink\" title=\"if 多选择结构\"></a>if 多选择结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"if-嵌套结构\"><a href=\"#if-嵌套结构\" class=\"headerlink\" title=\"if 嵌套结构\"></a>if 嵌套结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 执行语句</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>布尔表达式<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 执行语句</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"switch-选择结构\"><a href=\"#switch-选择结构\" class=\"headerlink\" title=\"switch 选择结构\"></a>switch 选择结构</h3><p>语法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> value<span class=\"token operator\">:</span>\n        <span class=\"token comment\">//语句</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//可选</span>\n    <span class=\"token keyword\">case</span> value<span class=\"token operator\">:</span>\n        <span class=\"token comment\">//语句</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//可选</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token comment\">//可选</span>\n        <span class=\"token comment\">// 语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><strong>自 JavaSE 7 开始支持字符串比较</strong></p>\n<h2 id=\"循环结构\"><a href=\"#循环结构\" class=\"headerlink\" title=\"循环结构\"></a>循环结构</h2><h3 id=\"while-循环\"><a href=\"#while-循环\" class=\"headerlink\" title=\"while 循环\"></a>while 循环</h3><p>结构</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>布尔表达式<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>当布尔表达式为<code>true</code>是进入循环执行语句</p>\n<p><strong>大多数情况需要循环停止下来，需要一个让表达式失效的方式来结束循环</strong></p>\n<h3 id=\"do…while-循环\"><a href=\"#do…while-循环\" class=\"headerlink\" title=\"do…while 循环\"></a>do…while 循环</h3><p>结构</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>布尔表达式<span class=\"token punctuation\">)</span></code></pre>\n\n<p>de…while 循环至少执行一次</p>\n<h3 id=\"for-循环\"><a href=\"#for-循环\" class=\"headerlink\" title=\"for 循环\"></a>for 循环</h3><p>结构</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>初始化<span class=\"token punctuation\">;</span> 布尔表达式<span class=\"token punctuation\">;</span> 更新<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"增强-for-循环\"><a href=\"#增强-for-循环\" class=\"headerlink\" title=\"增强 for 循环\"></a>增强 for 循环</h3><p>主要用于遍历数组，JavaSE 5 引入</p>\n<p>结构</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>声明语句 <span class=\"token operator\">:</span> 表达式<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//执行语句</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<blockquote>\n<p>声明语句：声明新的局部变量，该变量的类型必须和数组元素类型匹配。其作用域限定在循环语句块，其值与此时的数组元素的值相等</p>\n<p>表达式：表达式是要访问的数组名，或者是返回值为数组的方法</p>\n</blockquote>\n<h2 id=\"break-continue\"><a href=\"#break-continue\" class=\"headerlink\" title=\"break continue\"></a>break continue</h2><h3 id=\"break\"><a href=\"#break\" class=\"headerlink\" title=\"break\"></a>break</h3><p>用于<strong>强制</strong>退出循环，或在<code>switch</code>语句中防止<code>case</code>穿透</p>\n<h3 id=\"continue\"><a href=\"#continue\" class=\"headerlink\" title=\"continue\"></a>continue</h3><p>用于终止当次循环，但仍会执行下一次循环</p>\n<blockquote>\n<p>Java 没有<code>goto</code>，但可以通过<code>label</code>标签和<code>continue</code>&amp;<code>break</code>实现</p>\n</blockquote>\n"},{"title":"Java学习笔记-Java方法","date":"2021-08-24T08:20:00.000Z","_content":"\n## 什么是方法\n\nJava 方法是语句集合，它们在一起执行一个功能\n\n+ 方法是解决一类问题的步骤的有序组合\n+ 方法包含于类或对象中\n+ 方法在程序中被创建，在其他地方被引用\n\n> 设计方法的原则：最好保持方法的原子性，即**一个方法只完成一个功能**\n\n## 方法的定义与调用\n\n### 方法的定义\n\n类似于C语言中的函数\n\n**方法包括一个方法头与一个方法体：**\n\n+ 方法头：\n  + 修饰符：可选，告诉编译器如何调用该方法，定义了该方法的访问类型\n  + 返回值类型：方法可能会返回值。返回值类型是方法返回值的数据类型，若方法没有返回值，则返回值类型为`void`\n  + 方法名：是方法的实际名称，与参数表共同构成方法签名\n  + 参数表：方法被调用时，将值传递给参数，这个值被称为实际参数或变量（实参），而用于接收外界输入的数据被称为形式参数（形参）；参数表指方法的参数类型、顺序和参数个数。方法可以不含任何参数\n    + 形式参数：在方法被调用时用于接收外界输入的数据。\n    + 实际参数：调用方法时实际传递给方法的数据\n\n+ 方法体：方法体包含具体的执行语句，定义该方法的功能\n\n```java\n修饰符 返回值类型 方法名(参数类型 参数名){ //方法头\n    /*\n      方法体\n    */\n    return 返回值;\n}\n```\n\n### 方法调用\n\n格式：`对象名.方法名(实参表)`\n\n> 值传递与引用传递：\n>\n> Java是值传递的，即调用方法时，将实参的值拷贝给形参，对形参的值进行更改时，实参的值不会发生改变，**注意：这里的“值”是指这个参数的值，它可以是数值，也可以是地址**，因此在考虑调用方法后的值变化问题需要具体分析，可以指针和内存管理角度去理解（C语言还是有用）\n\n## 方法的重载\n\n重载就是一个类中，有相同的方法名称，但形参不同的方法\n\n规则：\n\n+ 方法名称相同\n+ 参数表必须不同（个数不同、或类型不同、或参数排列顺序不同等）\n+ 方法的返回类型可以相同也可以不同\n+ 仅仅返回类型不同不足以成为方法的重载\n\n## 命令行传参\n\n与C语言类似，在运行时通过给`main`方法传递参数来实现相应的功能\n\n```sh\njavac 文件名.java\njava 包名.类名 参数\n# 注意：运行时一定要回退至根目录下通过包名来找到类\n```\n\n## 可变参数\n\nJDK 1.5 开始支持传递同类型可变参数给一个方法\n\n在方法的声明中。在指定参数类型后加上一个省略号（...）\n\n一个方法中只能指定一个可变参数，且必须时方法的最后一个参数\n\n> 本质上是给方法传递一个数组实现\n\n## 递归\n\n自己调用自己\n\n+ 递归结构\n  + 递归头：即递归终点的到达条件\n  + 递归体：调用自身的语句\n\n**没有递归头将会导致递归工作栈溢出**\n\n例如递归实现阶乘\n\n```java\npublic static int fact(int n){\n    if (n == 1){\n        return 1;\n    }else{\n        return n * fact(n - 1);\n    }\n}\n```\n\n","source":"_posts/Java-note-4.md","raw":"---\ntitle: Java学习笔记-Java方法\ndate: 2021-08-24 16:20:00\ntags: \n  - Java\n  - 学习\ncategories:\n  - 学习笔记\n  - Java笔记\n---\n\n## 什么是方法\n\nJava 方法是语句集合，它们在一起执行一个功能\n\n+ 方法是解决一类问题的步骤的有序组合\n+ 方法包含于类或对象中\n+ 方法在程序中被创建，在其他地方被引用\n\n> 设计方法的原则：最好保持方法的原子性，即**一个方法只完成一个功能**\n\n## 方法的定义与调用\n\n### 方法的定义\n\n类似于C语言中的函数\n\n**方法包括一个方法头与一个方法体：**\n\n+ 方法头：\n  + 修饰符：可选，告诉编译器如何调用该方法，定义了该方法的访问类型\n  + 返回值类型：方法可能会返回值。返回值类型是方法返回值的数据类型，若方法没有返回值，则返回值类型为`void`\n  + 方法名：是方法的实际名称，与参数表共同构成方法签名\n  + 参数表：方法被调用时，将值传递给参数，这个值被称为实际参数或变量（实参），而用于接收外界输入的数据被称为形式参数（形参）；参数表指方法的参数类型、顺序和参数个数。方法可以不含任何参数\n    + 形式参数：在方法被调用时用于接收外界输入的数据。\n    + 实际参数：调用方法时实际传递给方法的数据\n\n+ 方法体：方法体包含具体的执行语句，定义该方法的功能\n\n```java\n修饰符 返回值类型 方法名(参数类型 参数名){ //方法头\n    /*\n      方法体\n    */\n    return 返回值;\n}\n```\n\n### 方法调用\n\n格式：`对象名.方法名(实参表)`\n\n> 值传递与引用传递：\n>\n> Java是值传递的，即调用方法时，将实参的值拷贝给形参，对形参的值进行更改时，实参的值不会发生改变，**注意：这里的“值”是指这个参数的值，它可以是数值，也可以是地址**，因此在考虑调用方法后的值变化问题需要具体分析，可以指针和内存管理角度去理解（C语言还是有用）\n\n## 方法的重载\n\n重载就是一个类中，有相同的方法名称，但形参不同的方法\n\n规则：\n\n+ 方法名称相同\n+ 参数表必须不同（个数不同、或类型不同、或参数排列顺序不同等）\n+ 方法的返回类型可以相同也可以不同\n+ 仅仅返回类型不同不足以成为方法的重载\n\n## 命令行传参\n\n与C语言类似，在运行时通过给`main`方法传递参数来实现相应的功能\n\n```sh\njavac 文件名.java\njava 包名.类名 参数\n# 注意：运行时一定要回退至根目录下通过包名来找到类\n```\n\n## 可变参数\n\nJDK 1.5 开始支持传递同类型可变参数给一个方法\n\n在方法的声明中。在指定参数类型后加上一个省略号（...）\n\n一个方法中只能指定一个可变参数，且必须时方法的最后一个参数\n\n> 本质上是给方法传递一个数组实现\n\n## 递归\n\n自己调用自己\n\n+ 递归结构\n  + 递归头：即递归终点的到达条件\n  + 递归体：调用自身的语句\n\n**没有递归头将会导致递归工作栈溢出**\n\n例如递归实现阶乘\n\n```java\npublic static int fact(int n){\n    if (n == 1){\n        return 1;\n    }else{\n        return n * fact(n - 1);\n    }\n}\n```\n\n","slug":"Java-note-4","published":1,"updated":"2021-08-24T10:04:38.455Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksq1dwri0009csvj2uuz4549","content":"<h2 id=\"什么是方法\"><a href=\"#什么是方法\" class=\"headerlink\" title=\"什么是方法\"></a>什么是方法</h2><p>Java 方法是语句集合，它们在一起执行一个功能</p>\n<ul>\n<li>方法是解决一类问题的步骤的有序组合</li>\n<li>方法包含于类或对象中</li>\n<li>方法在程序中被创建，在其他地方被引用</li>\n</ul>\n<blockquote>\n<p>设计方法的原则：最好保持方法的原子性，即<strong>一个方法只完成一个功能</strong></p>\n</blockquote>\n<h2 id=\"方法的定义与调用\"><a href=\"#方法的定义与调用\" class=\"headerlink\" title=\"方法的定义与调用\"></a>方法的定义与调用</h2><h3 id=\"方法的定义\"><a href=\"#方法的定义\" class=\"headerlink\" title=\"方法的定义\"></a>方法的定义</h3><p>类似于C语言中的函数</p>\n<p><strong>方法包括一个方法头与一个方法体：</strong></p>\n<ul>\n<li><p>方法头：</p>\n<ul>\n<li>修饰符：可选，告诉编译器如何调用该方法，定义了该方法的访问类型</li>\n<li>返回值类型：方法可能会返回值。返回值类型是方法返回值的数据类型，若方法没有返回值，则返回值类型为<code>void</code></li>\n<li>方法名：是方法的实际名称，与参数表共同构成方法签名</li>\n<li>参数表：方法被调用时，将值传递给参数，这个值被称为实际参数或变量（实参），而用于接收外界输入的数据被称为形式参数（形参）；参数表指方法的参数类型、顺序和参数个数。方法可以不含任何参数<ul>\n<li>形式参数：在方法被调用时用于接收外界输入的数据。</li>\n<li>实际参数：调用方法时实际传递给方法的数据</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>方法体：方法体包含具体的执行语句，定义该方法的功能</p>\n</li>\n</ul>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">修饰符 返回值类型 方法名<span class=\"token punctuation\">(</span>参数类型 参数名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//方法头</span>\n    <span class=\"token comment\">/*\n      方法体\n    */</span>\n    <span class=\"token keyword\">return</span> 返回值<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"方法调用\"><a href=\"#方法调用\" class=\"headerlink\" title=\"方法调用\"></a>方法调用</h3><p>格式：<code>对象名.方法名(实参表)</code></p>\n<blockquote>\n<p>值传递与引用传递：</p>\n<p>Java是值传递的，即调用方法时，将实参的值拷贝给形参，对形参的值进行更改时，实参的值不会发生改变，<strong>注意：这里的“值”是指这个参数的值，它可以是数值，也可以是地址</strong>，因此在考虑调用方法后的值变化问题需要具体分析，可以指针和内存管理角度去理解（C语言还是有用）</p>\n</blockquote>\n<h2 id=\"方法的重载\"><a href=\"#方法的重载\" class=\"headerlink\" title=\"方法的重载\"></a>方法的重载</h2><p>重载就是一个类中，有相同的方法名称，但形参不同的方法</p>\n<p>规则：</p>\n<ul>\n<li>方法名称相同</li>\n<li>参数表必须不同（个数不同、或类型不同、或参数排列顺序不同等）</li>\n<li>方法的返回类型可以相同也可以不同</li>\n<li>仅仅返回类型不同不足以成为方法的重载</li>\n</ul>\n<h2 id=\"命令行传参\"><a href=\"#命令行传参\" class=\"headerlink\" title=\"命令行传参\"></a>命令行传参</h2><p>与C语言类似，在运行时通过给<code>main</code>方法传递参数来实现相应的功能</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">javac 文件名.java\njava 包名.类名 参数\n# 注意：运行时一定要回退至根目录下通过包名来找到类</code></pre>\n\n<h2 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h2><p>JDK 1.5 开始支持传递同类型可变参数给一个方法</p>\n<p>在方法的声明中。在指定参数类型后加上一个省略号（…）</p>\n<p>一个方法中只能指定一个可变参数，且必须时方法的最后一个参数</p>\n<blockquote>\n<p>本质上是给方法传递一个数组实现</p>\n</blockquote>\n<h2 id=\"递归\"><a href=\"#递归\" class=\"headerlink\" title=\"递归\"></a>递归</h2><p>自己调用自己</p>\n<ul>\n<li>递归结构<ul>\n<li>递归头：即递归终点的到达条件</li>\n<li>递归体：调用自身的语句</li>\n</ul>\n</li>\n</ul>\n<p><strong>没有递归头将会导致递归工作栈溢出</strong></p>\n<p>例如递归实现阶乘</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">fact</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">fact</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h2 id=\"什么是方法\"><a href=\"#什么是方法\" class=\"headerlink\" title=\"什么是方法\"></a>什么是方法</h2><p>Java 方法是语句集合，它们在一起执行一个功能</p>\n<ul>\n<li>方法是解决一类问题的步骤的有序组合</li>\n<li>方法包含于类或对象中</li>\n<li>方法在程序中被创建，在其他地方被引用</li>\n</ul>\n<blockquote>\n<p>设计方法的原则：最好保持方法的原子性，即<strong>一个方法只完成一个功能</strong></p>\n</blockquote>\n<h2 id=\"方法的定义与调用\"><a href=\"#方法的定义与调用\" class=\"headerlink\" title=\"方法的定义与调用\"></a>方法的定义与调用</h2><h3 id=\"方法的定义\"><a href=\"#方法的定义\" class=\"headerlink\" title=\"方法的定义\"></a>方法的定义</h3><p>类似于C语言中的函数</p>\n<p><strong>方法包括一个方法头与一个方法体：</strong></p>\n<ul>\n<li><p>方法头：</p>\n<ul>\n<li>修饰符：可选，告诉编译器如何调用该方法，定义了该方法的访问类型</li>\n<li>返回值类型：方法可能会返回值。返回值类型是方法返回值的数据类型，若方法没有返回值，则返回值类型为<code>void</code></li>\n<li>方法名：是方法的实际名称，与参数表共同构成方法签名</li>\n<li>参数表：方法被调用时，将值传递给参数，这个值被称为实际参数或变量（实参），而用于接收外界输入的数据被称为形式参数（形参）；参数表指方法的参数类型、顺序和参数个数。方法可以不含任何参数<ul>\n<li>形式参数：在方法被调用时用于接收外界输入的数据。</li>\n<li>实际参数：调用方法时实际传递给方法的数据</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>方法体：方法体包含具体的执行语句，定义该方法的功能</p>\n</li>\n</ul>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">修饰符 返回值类型 方法名<span class=\"token punctuation\">(</span>参数类型 参数名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//方法头</span>\n    <span class=\"token comment\">/*\n      方法体\n    */</span>\n    <span class=\"token keyword\">return</span> 返回值<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"方法调用\"><a href=\"#方法调用\" class=\"headerlink\" title=\"方法调用\"></a>方法调用</h3><p>格式：<code>对象名.方法名(实参表)</code></p>\n<blockquote>\n<p>值传递与引用传递：</p>\n<p>Java是值传递的，即调用方法时，将实参的值拷贝给形参，对形参的值进行更改时，实参的值不会发生改变，<strong>注意：这里的“值”是指这个参数的值，它可以是数值，也可以是地址</strong>，因此在考虑调用方法后的值变化问题需要具体分析，可以指针和内存管理角度去理解（C语言还是有用）</p>\n</blockquote>\n<h2 id=\"方法的重载\"><a href=\"#方法的重载\" class=\"headerlink\" title=\"方法的重载\"></a>方法的重载</h2><p>重载就是一个类中，有相同的方法名称，但形参不同的方法</p>\n<p>规则：</p>\n<ul>\n<li>方法名称相同</li>\n<li>参数表必须不同（个数不同、或类型不同、或参数排列顺序不同等）</li>\n<li>方法的返回类型可以相同也可以不同</li>\n<li>仅仅返回类型不同不足以成为方法的重载</li>\n</ul>\n<h2 id=\"命令行传参\"><a href=\"#命令行传参\" class=\"headerlink\" title=\"命令行传参\"></a>命令行传参</h2><p>与C语言类似，在运行时通过给<code>main</code>方法传递参数来实现相应的功能</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">javac 文件名.java\njava 包名.类名 参数\n# 注意：运行时一定要回退至根目录下通过包名来找到类</code></pre>\n\n<h2 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h2><p>JDK 1.5 开始支持传递同类型可变参数给一个方法</p>\n<p>在方法的声明中。在指定参数类型后加上一个省略号（…）</p>\n<p>一个方法中只能指定一个可变参数，且必须时方法的最后一个参数</p>\n<blockquote>\n<p>本质上是给方法传递一个数组实现</p>\n</blockquote>\n<h2 id=\"递归\"><a href=\"#递归\" class=\"headerlink\" title=\"递归\"></a>递归</h2><p>自己调用自己</p>\n<ul>\n<li>递归结构<ul>\n<li>递归头：即递归终点的到达条件</li>\n<li>递归体：调用自身的语句</li>\n</ul>\n</li>\n</ul>\n<p><strong>没有递归头将会导致递归工作栈溢出</strong></p>\n<p>例如递归实现阶乘</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">fact</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">fact</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n"},{"title":"Java学习笔记-数组","date":"2021-08-24T10:09:34.000Z","_content":"\n## 数组的声明创建\n\n+ 声明\n\n  ```java\n  dataType[] arrayRefVar; //首选\n  dataType arrayRefVar[]; //也行\n  ```\n\n+ 创建\n\n  ```java\n  arrayRefVar = new dataType[arraySize];\n  ```\n\n+ 也可以\n\n  ```java\n  dataType[] arrayRefVar = new dataType[arraySize];\n  ```\n\n> 数组下标从0开始\n\n+ 获取数组长度`arrays.length`\n\n  > arrays 为数组名\n\n## 数组初始化\n\n### 静态初始化\n\n```java\ndataType[] arrayRefVar = {data1, data2,data3...};\n```\n\n### 动态初始化\n\n```java\ndataType[] arrayRefVar = new dataType[arraySize];\narrayRefVar[0] = data1;\narrayRefVar[1] = data2;\n```\n\n### 默认初始化\n\n+ 数组是引用类型，其元素相当于类的实例变量，因此数组一经分配，其元素也被按照实例变量同样的方式被隐式初始化\n\n## 数组使用\n\n+ for-each 循环\n\n  ```java\n  for (int array : arrays){\n      System.out.println(array);\n  }\n  ```\n\n+ 数组作为参数\n\n  ```java\n  pubilc static void printArray(int[] arrays){\n      for (int array : arrays){\n      \tSystem.out.println(array);\n  \t}\n  }\n  ```\n\n+ 数组作为返回值\n\n  ```java\n  pubilc static int[] reverse(int[] arrays){\n      int[] result = new int[arrays.length];\n      for (int i = 0, j = result.length - 1; i < arrays.length; i++, j--){\n          result[j] = arrays[i];\n      }\n      return result;\n  }\n  ```\n\n## 多维数组\n\n可以看作数组的数组\n\n以二维数组为例\n\n```java\nint[][] arrays = {{1,2},{2,3},{3,4},{4,5}};\n```\n\n获取数组长度只获取当前维度的长度\n\n```java\nSystem.out.println(arrays.length);\n// 打印结果为4\nSystem.out.println(arrays[0].length);\n// 打印结果为2\n```\n\n结构\n\n![arrays](https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/arrays.jpg)\n\n>  三维数组或更高维的类似\n\n## Arrays 类\n\n[Java SE 8 官方API文档](https://docs.oracle.com/javase/8/docs/api/)\n\n","source":"_posts/Java-note-5.md","raw":"---\ntitle: Java学习笔记-数组\ndate: 2021-08-24 18:09:34\ntags: \n  - Java\n  - 学习\ncategories:\n  - 学习笔记\n  - Java笔记\n---\n\n## 数组的声明创建\n\n+ 声明\n\n  ```java\n  dataType[] arrayRefVar; //首选\n  dataType arrayRefVar[]; //也行\n  ```\n\n+ 创建\n\n  ```java\n  arrayRefVar = new dataType[arraySize];\n  ```\n\n+ 也可以\n\n  ```java\n  dataType[] arrayRefVar = new dataType[arraySize];\n  ```\n\n> 数组下标从0开始\n\n+ 获取数组长度`arrays.length`\n\n  > arrays 为数组名\n\n## 数组初始化\n\n### 静态初始化\n\n```java\ndataType[] arrayRefVar = {data1, data2,data3...};\n```\n\n### 动态初始化\n\n```java\ndataType[] arrayRefVar = new dataType[arraySize];\narrayRefVar[0] = data1;\narrayRefVar[1] = data2;\n```\n\n### 默认初始化\n\n+ 数组是引用类型，其元素相当于类的实例变量，因此数组一经分配，其元素也被按照实例变量同样的方式被隐式初始化\n\n## 数组使用\n\n+ for-each 循环\n\n  ```java\n  for (int array : arrays){\n      System.out.println(array);\n  }\n  ```\n\n+ 数组作为参数\n\n  ```java\n  pubilc static void printArray(int[] arrays){\n      for (int array : arrays){\n      \tSystem.out.println(array);\n  \t}\n  }\n  ```\n\n+ 数组作为返回值\n\n  ```java\n  pubilc static int[] reverse(int[] arrays){\n      int[] result = new int[arrays.length];\n      for (int i = 0, j = result.length - 1; i < arrays.length; i++, j--){\n          result[j] = arrays[i];\n      }\n      return result;\n  }\n  ```\n\n## 多维数组\n\n可以看作数组的数组\n\n以二维数组为例\n\n```java\nint[][] arrays = {{1,2},{2,3},{3,4},{4,5}};\n```\n\n获取数组长度只获取当前维度的长度\n\n```java\nSystem.out.println(arrays.length);\n// 打印结果为4\nSystem.out.println(arrays[0].length);\n// 打印结果为2\n```\n\n结构\n\n![arrays](https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/arrays.jpg)\n\n>  三维数组或更高维的类似\n\n## Arrays 类\n\n[Java SE 8 官方API文档](https://docs.oracle.com/javase/8/docs/api/)\n\n","slug":"Java-note-5","published":1,"updated":"2021-08-24T12:19:01.812Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksq1dwrk000bcsvjdivka0u3","content":"<h2 id=\"数组的声明创建\"><a href=\"#数组的声明创建\" class=\"headerlink\" title=\"数组的声明创建\"></a>数组的声明创建</h2><ul>\n<li><p>声明</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">dataType<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayRefVar<span class=\"token punctuation\">;</span> <span class=\"token comment\">//首选</span>\ndataType arrayRefVar<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//也行</span></code></pre></li>\n<li><p>创建</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">arrayRefVar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> dataType<span class=\"token punctuation\">[</span>arraySize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></li>\n<li><p>也可以</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">dataType<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayRefVar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> dataType<span class=\"token punctuation\">[</span>arraySize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></li>\n</ul>\n<blockquote>\n<p>数组下标从0开始</p>\n</blockquote>\n<ul>\n<li><p>获取数组长度<code>arrays.length</code></p>\n<blockquote>\n<p>arrays 为数组名</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"数组初始化\"><a href=\"#数组初始化\" class=\"headerlink\" title=\"数组初始化\"></a>数组初始化</h2><h3 id=\"静态初始化\"><a href=\"#静态初始化\" class=\"headerlink\" title=\"静态初始化\"></a>静态初始化</h3><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">dataType<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayRefVar <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span>data3<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h3 id=\"动态初始化\"><a href=\"#动态初始化\" class=\"headerlink\" title=\"动态初始化\"></a>动态初始化</h3><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">dataType<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayRefVar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> dataType<span class=\"token punctuation\">[</span>arraySize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narrayRefVar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data1<span class=\"token punctuation\">;</span>\narrayRefVar<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data2<span class=\"token punctuation\">;</span></code></pre>\n\n<h3 id=\"默认初始化\"><a href=\"#默认初始化\" class=\"headerlink\" title=\"默认初始化\"></a>默认初始化</h3><ul>\n<li>数组是引用类型，其元素相当于类的实例变量，因此数组一经分配，其元素也被按照实例变量同样的方式被隐式初始化</li>\n</ul>\n<h2 id=\"数组使用\"><a href=\"#数组使用\" class=\"headerlink\" title=\"数组使用\"></a>数组使用</h2><ul>\n<li><p>for-each 循环</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> array <span class=\"token operator\">:</span> arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>数组作为参数</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">pubilc <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> array <span class=\"token operator\">:</span> arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>数组作为返回值</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">pubilc <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>arrays<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arrays<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        result<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrays<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n</ul>\n<h2 id=\"多维数组\"><a href=\"#多维数组\" class=\"headerlink\" title=\"多维数组\"></a>多维数组</h2><p>可以看作数组的数组</p>\n<p>以二维数组为例</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrays <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>获取数组长度只获取当前维度的长度</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrays<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 打印结果为4</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrays<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 打印结果为2</span></code></pre>\n\n<p>结构</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/arrays.jpg\" alt=\"arrays\" loading=\"lazy\"></p>\n<blockquote>\n<p> 三维数组或更高维的类似</p>\n</blockquote>\n<h2 id=\"Arrays-类\"><a href=\"#Arrays-类\" class=\"headerlink\" title=\"Arrays 类\"></a>Arrays 类</h2><p><a href=\"https://docs.oracle.com/javase/8/docs/api/\">Java SE 8 官方API文档</a></p>\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h2 id=\"数组的声明创建\"><a href=\"#数组的声明创建\" class=\"headerlink\" title=\"数组的声明创建\"></a>数组的声明创建</h2><ul>\n<li><p>声明</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">dataType<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayRefVar<span class=\"token punctuation\">;</span> <span class=\"token comment\">//首选</span>\ndataType arrayRefVar<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//也行</span></code></pre></li>\n<li><p>创建</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">arrayRefVar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> dataType<span class=\"token punctuation\">[</span>arraySize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></li>\n<li><p>也可以</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">dataType<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayRefVar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> dataType<span class=\"token punctuation\">[</span>arraySize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></li>\n</ul>\n<blockquote>\n<p>数组下标从0开始</p>\n</blockquote>\n<ul>\n<li><p>获取数组长度<code>arrays.length</code></p>\n<blockquote>\n<p>arrays 为数组名</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"数组初始化\"><a href=\"#数组初始化\" class=\"headerlink\" title=\"数组初始化\"></a>数组初始化</h2><h3 id=\"静态初始化\"><a href=\"#静态初始化\" class=\"headerlink\" title=\"静态初始化\"></a>静态初始化</h3><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">dataType<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayRefVar <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span>data3<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h3 id=\"动态初始化\"><a href=\"#动态初始化\" class=\"headerlink\" title=\"动态初始化\"></a>动态初始化</h3><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">dataType<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayRefVar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> dataType<span class=\"token punctuation\">[</span>arraySize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narrayRefVar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data1<span class=\"token punctuation\">;</span>\narrayRefVar<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data2<span class=\"token punctuation\">;</span></code></pre>\n\n<h3 id=\"默认初始化\"><a href=\"#默认初始化\" class=\"headerlink\" title=\"默认初始化\"></a>默认初始化</h3><ul>\n<li>数组是引用类型，其元素相当于类的实例变量，因此数组一经分配，其元素也被按照实例变量同样的方式被隐式初始化</li>\n</ul>\n<h2 id=\"数组使用\"><a href=\"#数组使用\" class=\"headerlink\" title=\"数组使用\"></a>数组使用</h2><ul>\n<li><p>for-each 循环</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> array <span class=\"token operator\">:</span> arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>数组作为参数</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">pubilc <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> array <span class=\"token operator\">:</span> arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>数组作为返回值</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\">pubilc <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>arrays<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arrays<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        result<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrays<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n</ul>\n<h2 id=\"多维数组\"><a href=\"#多维数组\" class=\"headerlink\" title=\"多维数组\"></a>多维数组</h2><p>可以看作数组的数组</p>\n<p>以二维数组为例</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrays <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>获取数组长度只获取当前维度的长度</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrays<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 打印结果为4</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrays<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 打印结果为2</span></code></pre>\n\n<p>结构</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/arrays.jpg\" alt=\"arrays\"></p>\n<blockquote>\n<p> 三维数组或更高维的类似</p>\n</blockquote>\n<h2 id=\"Arrays-类\"><a href=\"#Arrays-类\" class=\"headerlink\" title=\"Arrays 类\"></a>Arrays 类</h2><p><a href=\"https://docs.oracle.com/javase/8/docs/api/\">Java SE 8 官方API文档</a></p>\n"},{"title":"My first blog","date":"2021-07-28T04:00:08.000Z","_content":"\n## 测试用写着玩\n\n没有内容\n\n---\n\n~~~java\npublic class HelloWorld{\n    public static void main{\n        System.out.println(\"Hello World!\");\n    }\n}\n~~~\n\n","source":"_posts/My-first-blog.md","raw":"---\ntitle: My first blog\ndate: 2021-07-28 12:00:08\ntags: 博客功能测试\ncategories: 没有内容的测试文章\n---\n\n## 测试用写着玩\n\n没有内容\n\n---\n\n~~~java\npublic class HelloWorld{\n    public static void main{\n        System.out.println(\"Hello World!\");\n    }\n}\n~~~\n\n","slug":"My-first-blog","published":1,"updated":"2021-07-29T15:22:48.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksq1dwrq000ecsvjebbthbsp","content":"<h2 id=\"测试用写着玩\"><a href=\"#测试用写着玩\" class=\"headerlink\" title=\"测试用写着玩\"></a>测试用写着玩</h2><p>没有内容</p>\n<hr>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> main<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h2 id=\"测试用写着玩\"><a href=\"#测试用写着玩\" class=\"headerlink\" title=\"测试用写着玩\"></a>测试用写着玩</h2><p>没有内容</p>\n<hr>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> main<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n"},{"title":"被SSL搞疯了","date":"2021-08-18T03:51:50.000Z","_content":"\n## SOS要死了要死了！！\n\n之前花了大力气搞了个云服务器，把部署环境都装好了，也部署成功了，然后想着给网站整个SSL，结果没整明白，一通瞎搞最后终于在网址栏上看见了那个熟悉的小锁，然后以为这就结束了，结果跑到又拍云整个CDN回来又发现网站无法访问了，不知道发生了什么，有无懂行的帮一下啊QAQ！！\n\n***\n\n自己折腾了半天发现果然还是托管到GitHub上香，直接进行一个摆烂。\n\n还有就是现在我在腾讯云上也注册了一个账号，到时候也玩玩这边的服务器，看看跟阿里那边有啥不同的体验，网站果然还是挂在GitHub上好，访问速度什么的，~~建议科学上网~~，心诚则灵（bushi）\n\n![1629272544-13552](https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/1629272544-13552.jpg)\n\n***\n\n#### 不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！\n\nrun了run了。\n","source":"_posts/SSL-makes-me-crazy-md.md","raw":"---\ntitle: 被SSL搞疯了\ndate: 2021-08-18 11:51:50\ntags: \n  - 博客搭建\n  - SSL\ncategories:\n  - 牢骚向\n---\n\n## SOS要死了要死了！！\n\n之前花了大力气搞了个云服务器，把部署环境都装好了，也部署成功了，然后想着给网站整个SSL，结果没整明白，一通瞎搞最后终于在网址栏上看见了那个熟悉的小锁，然后以为这就结束了，结果跑到又拍云整个CDN回来又发现网站无法访问了，不知道发生了什么，有无懂行的帮一下啊QAQ！！\n\n***\n\n自己折腾了半天发现果然还是托管到GitHub上香，直接进行一个摆烂。\n\n还有就是现在我在腾讯云上也注册了一个账号，到时候也玩玩这边的服务器，看看跟阿里那边有啥不同的体验，网站果然还是挂在GitHub上好，访问速度什么的，~~建议科学上网~~，心诚则灵（bushi）\n\n![1629272544-13552](https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/1629272544-13552.jpg)\n\n***\n\n#### 不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！\n\nrun了run了。\n","slug":"SSL-makes-me-crazy-md","published":1,"updated":"2021-08-21T14:31:28.438Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksq1dwrr000fcsvjf6zpfhtl","content":"<h2 id=\"SOS要死了要死了！！\"><a href=\"#SOS要死了要死了！！\" class=\"headerlink\" title=\"SOS要死了要死了！！\"></a>SOS要死了要死了！！</h2><p>之前花了大力气搞了个云服务器，把部署环境都装好了，也部署成功了，然后想着给网站整个SSL，结果没整明白，一通瞎搞最后终于在网址栏上看见了那个熟悉的小锁，然后以为这就结束了，结果跑到又拍云整个CDN回来又发现网站无法访问了，不知道发生了什么，有无懂行的帮一下啊QAQ！！</p>\n<hr>\n<p>自己折腾了半天发现果然还是托管到GitHub上香，直接进行一个摆烂。</p>\n<p>还有就是现在我在腾讯云上也注册了一个账号，到时候也玩玩这边的服务器，看看跟阿里那边有啥不同的体验，网站果然还是挂在GitHub上好，访问速度什么的，<del>建议科学上网</del>，心诚则灵（bushi）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/1629272544-13552.jpg\" alt=\"1629272544-13552\" loading=\"lazy\"></p>\n<hr>\n<h4 id=\"不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！\"><a href=\"#不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！\" class=\"headerlink\" title=\"不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！\"></a>不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！</h4><p>run了run了。</p>\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h2 id=\"SOS要死了要死了！！\"><a href=\"#SOS要死了要死了！！\" class=\"headerlink\" title=\"SOS要死了要死了！！\"></a>SOS要死了要死了！！</h2><p>之前花了大力气搞了个云服务器，把部署环境都装好了，也部署成功了，然后想着给网站整个SSL，结果没整明白，一通瞎搞最后终于在网址栏上看见了那个熟悉的小锁，然后以为这就结束了，结果跑到又拍云整个CDN回来又发现网站无法访问了，不知道发生了什么，有无懂行的帮一下啊QAQ！！</p>\n<hr>\n<p>自己折腾了半天发现果然还是托管到GitHub上香，直接进行一个摆烂。</p>\n<p>还有就是现在我在腾讯云上也注册了一个账号，到时候也玩玩这边的服务器，看看跟阿里那边有啥不同的体验，网站果然还是挂在GitHub上好，访问速度什么的，<del>建议科学上网</del>，心诚则灵（bushi）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/1629272544-13552.jpg\" alt=\"1629272544-13552\"></p>\n<hr>\n<h4 id=\"不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！\"><a href=\"#不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！\" class=\"headerlink\" title=\"不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！\"></a>不管了，还有一大堆破事没整完，各种报告和课题要写，懒得管这服务器了，寄！</h4><p>run了run了。</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-07-28T03:55:51.206Z","updated":"1985-10-26T08:15:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksq1dwru000icsvj8w25ht2q","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"博客搭建过程与心得","date":"2021-08-05T12:23:48.000Z","_content":"\n## 第一次自己搭建博客\n\n现在是暑假嘛，反正没啥事干，正好在网上看见不少个人博客搭建教程，就想着自己搭着玩玩，于是便选择了[Hexo](https://hexo.io/zh-cn/)框架，看着教程和文档一步一步搭，不过居然比我想象中简单，~~有手就行~~，这里就大概讲一讲本人搭建该博客的过程和体会吧。（注意：这不是教程，只是把本人搭建过程记录一下而已，~~怕我忘掉~~，具体过程建议百度）\n\n### 本地环境搭建\n\n***\n\n这个不多说，先把[Node.js ](https://nodejs.org/en/)下好安装，在终端里输入`node --version`检验是否安装成功，好，搞定。这个时候可以使用Node.js带的包管理工具`npm`安装Hexo工具（国内使用`npm`速度有点慢，**可以考虑换`taobao`源**），很简单，一行命令足矣。=￣ω￣=\n\n```sh\nnpm install hexo-cli -g\n```\n\n### 远程仓库搭建\n\n***\n\n这玩意都不用搭建，去~~知名同性交友网站~~[GitHub](https://github.com/)上`create`就完事了，省时省力又省钱，仓库命名记得设为`用户名.github.io`，这个就是博客的域名了，自定义域名？懒得注册，懒得备案，先稍稍吧（国内访问GitHub速度不稳定，**嫌慢可以考虑[Gitee](https://gitee.com/)试试**）。好了远程也搞定了，现在就只要把本地和远程关联起来部署上去就好了，好耶！！！！\\\\^o^/\n\n> Git与GitHub的使用是基本功，而且这个网上教程一大把，搭个博客也不需要对此理解多深，会用就行(。・∀・)ノ\n\n### 本地博客搭建\n\n***\n\n之前不是在本地安装了Hexo吗，现在利用这个工具，选择一个合适的目录，在终端中输入命令\n\n```sh\nhexo init 你想为你的Hexo工作目录取的名字\ncd 你想为你的Hexo工作目录取的名字\nnpm install\n# 我一般写成hexo s比较省事\nhexo server\n```\n\n现在博客已经在本地跑起来了，默认通过`localhost:4000`这个端口访问，一般用于本地预览。\n\n此时的博客使用的是默认的主题，叫`landscape`（好像是这个名来着），有点太普通了？直接网上搜其他更好康的主题，推荐一波我用的主题[Yun](https://github.com/YunYouJun/hexo-theme-yun)（没收广告费，我是真觉得不戳）。把主题安装到`Hexo工作目录/themes`下，修改`Hexo工作目录`下的`_config.yml`配置文件，找到`theme`项，更改为\n\n```yaml\ntheme: yun\n# 记得写所要使用的主题的文件夹名\n```\n\n> 事实说明，一个好看的主题可以极大的提升博客站长完善与维护博客的心理体验\n\n如果想要对主题进行更多配置的话建议自行搜索方法或看主题的制作者是否提供相关文档，比如我所用的主题就有[Yun主题使用指南](https://yun.yunyoujun.cn/guide/)手把手教你配置。\n\n`_config.yml`中还可以修改许多配置，可以将自己的博客进行各种自定义，建议看[官方文档](https://hexo.io/zh-cn/docs/)好好学。\n\n各项配置完成后，现在可以生成将会被展示出来的静态文件了，在终端中输入\n\n```sh\nhexo clean\n# g 就是 generate 的缩写\nhexo g\n```\n\n> 如果注意观察文件夹，会发现，当输入`hexo clean`命令后，目录下的`public`子目录会被删除，输入`hexo g`命令后，该子目录又会重新生成，这是因为该子目录下存放的就是将会在网页上被浏览的静态文件，当对博客进行修改后，先`clean`掉原本的静态文件，在`generate`新的静态文件，这样就完成了对博客的更新。\n\n如果还想在本地预览的话就接着输入\n\n```sh\nhexo s\n```\n\nOK！现在本地博客已经搞定了，开始着手把它部署到远端吧！\\\\(@^0^@)/\n\n### 将本地文件与远程仓库建立关联\n\n***\n\n基本的git操作了，直接在工作目录下\n\n```sh\ngit init # 此时这个目录就被初始化成了一个Git仓库\n```\n\n然后可以建立一个分支\n\n```sh\ngit checkout -b hexo # 表示建立了一个名叫hexo的分支\n```\n\n这个分支我将用于备份博客的源代码文件。（本来没有备份的习惯，但这里参考了[教你如何从零开始搭建一个属于自己的网站 ](https://www.yunyoujun.cn/share/how-to-build-your-site/)的教程，就也学着做了）\n\n将这个本地的Git仓库与之前在GitHub上搭建的远程仓库建立关联\n\n```sh\ngit remote add origin https://github.com/用户名/用户名.github.io\n```\n\n安装Hexo的部署插件`hexo-deployer-git`\n\n```sh\nnpm install hexo-deployer-git\n```\n\n在`_config.yml`配置文件中的`deployer`项中修改\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/用户名/用户名.github.io.git # 远程仓库的网址\n  branch: main # 分支名，表示将要部署的分支\n  message: # 可选填，对更新部署的说明\n```\n\n至此，本地与远程关联建立完成！\n\n### 部署与备份\n\n***\n\n部署很简单，之前部署安装了`hexo-deployer-git`这个插件吗，生成静态文件后直接输入命令\n\n```sh\nhexo d # d 是 deploy 的缩写\n```\n\n完成部署！\n\n然后还可以对网站源文件上传到远端进行备份，就利用之前建立的分支，同样是基本的git命令\n\n```sh\n# git代码提交老三样\ngit add -A\ngit commit -m \"xxx\" # 养成备注说明的好习惯\ngit push # 第一次推送记得指定默认分支\n# git push --set-upstream origin hexo\n```\n\nohhhhhh！！！现在个人博客已经搭建完毕了！用浏览器访问看看⑧！！ヽ(✿ﾟ▽ﾟ)ノ\n\n### 个人感受\n\n***\n\n其实搭建个人博客是受了b站up主[CodeSheep](https://space.bilibili.com/384068749/)的某期视频[手把手教你从0开始搭建自己的个人博客 ](https://www.bilibili.com/video/BV1Yb411a7ty)的影响，就自己搭着看看，一路做下来，只能说很多事情唯一的难点就是 _Just do it_ 了，自己搭建博客之前总觉得这玩意涉及了一堆看不懂的技术栈，我这种又菜又懒的辣鸡肯定搭不出来，结果当自己真正上手做了才发现并没有想象的那么夸张，许多东西都是很基础的命令，比如简单的git命令。真正遇到问题了也大多可以通过自己搜索解决，Hexo官方与我所使用的主题也提供了详细的配置文档供我参考，实际过程中并没有遇到什么无法解决的问题，还学到了不少前端知识，~~爷真nb~~。希望以后遇到新事物新技术是也能冷静下来好好研究吧，这里总结一下搭建时的心得经验吧：\n\n+ **不要怕，Just do it! 迈出第一步就成功了一半**\n+ 记得提前搭建好本地环境，比如Node.js，git等工具\n+ 搞清楚每一步要在哪一个目录下进行，各种链接与路径要弄清楚\n+ 出问题了别紧张，看清楚报错信息，网上搜一般都可以搜到解决办法\n+ 搜到解决办法不要看见什么就用什么，多看几个人的回答，找大家都提到的方法成功率更高\n+ 不知道下一步怎么做了就看相关文档，文档讲的很详细\n\n***\n\n### 以上，第一篇正经博客\n\n感谢支持o(\\*￣▽￣\\*)o\n","source":"_posts/blog-generating-sharing.md","raw":"---\ntitle: 博客搭建过程与心得\ndate: 2021-08-05 20:23:48\ntags:\n  - Hexo\n  - 博客搭建\n  - 分享\ncategories:\n  - 技术向\n---\n\n## 第一次自己搭建博客\n\n现在是暑假嘛，反正没啥事干，正好在网上看见不少个人博客搭建教程，就想着自己搭着玩玩，于是便选择了[Hexo](https://hexo.io/zh-cn/)框架，看着教程和文档一步一步搭，不过居然比我想象中简单，~~有手就行~~，这里就大概讲一讲本人搭建该博客的过程和体会吧。（注意：这不是教程，只是把本人搭建过程记录一下而已，~~怕我忘掉~~，具体过程建议百度）\n\n### 本地环境搭建\n\n***\n\n这个不多说，先把[Node.js ](https://nodejs.org/en/)下好安装，在终端里输入`node --version`检验是否安装成功，好，搞定。这个时候可以使用Node.js带的包管理工具`npm`安装Hexo工具（国内使用`npm`速度有点慢，**可以考虑换`taobao`源**），很简单，一行命令足矣。=￣ω￣=\n\n```sh\nnpm install hexo-cli -g\n```\n\n### 远程仓库搭建\n\n***\n\n这玩意都不用搭建，去~~知名同性交友网站~~[GitHub](https://github.com/)上`create`就完事了，省时省力又省钱，仓库命名记得设为`用户名.github.io`，这个就是博客的域名了，自定义域名？懒得注册，懒得备案，先稍稍吧（国内访问GitHub速度不稳定，**嫌慢可以考虑[Gitee](https://gitee.com/)试试**）。好了远程也搞定了，现在就只要把本地和远程关联起来部署上去就好了，好耶！！！！\\\\^o^/\n\n> Git与GitHub的使用是基本功，而且这个网上教程一大把，搭个博客也不需要对此理解多深，会用就行(。・∀・)ノ\n\n### 本地博客搭建\n\n***\n\n之前不是在本地安装了Hexo吗，现在利用这个工具，选择一个合适的目录，在终端中输入命令\n\n```sh\nhexo init 你想为你的Hexo工作目录取的名字\ncd 你想为你的Hexo工作目录取的名字\nnpm install\n# 我一般写成hexo s比较省事\nhexo server\n```\n\n现在博客已经在本地跑起来了，默认通过`localhost:4000`这个端口访问，一般用于本地预览。\n\n此时的博客使用的是默认的主题，叫`landscape`（好像是这个名来着），有点太普通了？直接网上搜其他更好康的主题，推荐一波我用的主题[Yun](https://github.com/YunYouJun/hexo-theme-yun)（没收广告费，我是真觉得不戳）。把主题安装到`Hexo工作目录/themes`下，修改`Hexo工作目录`下的`_config.yml`配置文件，找到`theme`项，更改为\n\n```yaml\ntheme: yun\n# 记得写所要使用的主题的文件夹名\n```\n\n> 事实说明，一个好看的主题可以极大的提升博客站长完善与维护博客的心理体验\n\n如果想要对主题进行更多配置的话建议自行搜索方法或看主题的制作者是否提供相关文档，比如我所用的主题就有[Yun主题使用指南](https://yun.yunyoujun.cn/guide/)手把手教你配置。\n\n`_config.yml`中还可以修改许多配置，可以将自己的博客进行各种自定义，建议看[官方文档](https://hexo.io/zh-cn/docs/)好好学。\n\n各项配置完成后，现在可以生成将会被展示出来的静态文件了，在终端中输入\n\n```sh\nhexo clean\n# g 就是 generate 的缩写\nhexo g\n```\n\n> 如果注意观察文件夹，会发现，当输入`hexo clean`命令后，目录下的`public`子目录会被删除，输入`hexo g`命令后，该子目录又会重新生成，这是因为该子目录下存放的就是将会在网页上被浏览的静态文件，当对博客进行修改后，先`clean`掉原本的静态文件，在`generate`新的静态文件，这样就完成了对博客的更新。\n\n如果还想在本地预览的话就接着输入\n\n```sh\nhexo s\n```\n\nOK！现在本地博客已经搞定了，开始着手把它部署到远端吧！\\\\(@^0^@)/\n\n### 将本地文件与远程仓库建立关联\n\n***\n\n基本的git操作了，直接在工作目录下\n\n```sh\ngit init # 此时这个目录就被初始化成了一个Git仓库\n```\n\n然后可以建立一个分支\n\n```sh\ngit checkout -b hexo # 表示建立了一个名叫hexo的分支\n```\n\n这个分支我将用于备份博客的源代码文件。（本来没有备份的习惯，但这里参考了[教你如何从零开始搭建一个属于自己的网站 ](https://www.yunyoujun.cn/share/how-to-build-your-site/)的教程，就也学着做了）\n\n将这个本地的Git仓库与之前在GitHub上搭建的远程仓库建立关联\n\n```sh\ngit remote add origin https://github.com/用户名/用户名.github.io\n```\n\n安装Hexo的部署插件`hexo-deployer-git`\n\n```sh\nnpm install hexo-deployer-git\n```\n\n在`_config.yml`配置文件中的`deployer`项中修改\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/用户名/用户名.github.io.git # 远程仓库的网址\n  branch: main # 分支名，表示将要部署的分支\n  message: # 可选填，对更新部署的说明\n```\n\n至此，本地与远程关联建立完成！\n\n### 部署与备份\n\n***\n\n部署很简单，之前部署安装了`hexo-deployer-git`这个插件吗，生成静态文件后直接输入命令\n\n```sh\nhexo d # d 是 deploy 的缩写\n```\n\n完成部署！\n\n然后还可以对网站源文件上传到远端进行备份，就利用之前建立的分支，同样是基本的git命令\n\n```sh\n# git代码提交老三样\ngit add -A\ngit commit -m \"xxx\" # 养成备注说明的好习惯\ngit push # 第一次推送记得指定默认分支\n# git push --set-upstream origin hexo\n```\n\nohhhhhh！！！现在个人博客已经搭建完毕了！用浏览器访问看看⑧！！ヽ(✿ﾟ▽ﾟ)ノ\n\n### 个人感受\n\n***\n\n其实搭建个人博客是受了b站up主[CodeSheep](https://space.bilibili.com/384068749/)的某期视频[手把手教你从0开始搭建自己的个人博客 ](https://www.bilibili.com/video/BV1Yb411a7ty)的影响，就自己搭着看看，一路做下来，只能说很多事情唯一的难点就是 _Just do it_ 了，自己搭建博客之前总觉得这玩意涉及了一堆看不懂的技术栈，我这种又菜又懒的辣鸡肯定搭不出来，结果当自己真正上手做了才发现并没有想象的那么夸张，许多东西都是很基础的命令，比如简单的git命令。真正遇到问题了也大多可以通过自己搜索解决，Hexo官方与我所使用的主题也提供了详细的配置文档供我参考，实际过程中并没有遇到什么无法解决的问题，还学到了不少前端知识，~~爷真nb~~。希望以后遇到新事物新技术是也能冷静下来好好研究吧，这里总结一下搭建时的心得经验吧：\n\n+ **不要怕，Just do it! 迈出第一步就成功了一半**\n+ 记得提前搭建好本地环境，比如Node.js，git等工具\n+ 搞清楚每一步要在哪一个目录下进行，各种链接与路径要弄清楚\n+ 出问题了别紧张，看清楚报错信息，网上搜一般都可以搜到解决办法\n+ 搜到解决办法不要看见什么就用什么，多看几个人的回答，找大家都提到的方法成功率更高\n+ 不知道下一步怎么做了就看相关文档，文档讲的很详细\n\n***\n\n### 以上，第一篇正经博客\n\n感谢支持o(\\*￣▽￣\\*)o\n","slug":"blog-generating-sharing","published":1,"updated":"2021-08-21T14:31:18.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksq1dwsl001ncsvjfesp6ej7","content":"<h2 id=\"第一次自己搭建博客\"><a href=\"#第一次自己搭建博客\" class=\"headerlink\" title=\"第一次自己搭建博客\"></a>第一次自己搭建博客</h2><p>现在是暑假嘛，反正没啥事干，正好在网上看见不少个人博客搭建教程，就想着自己搭着玩玩，于是便选择了<a href=\"https://hexo.io/zh-cn/\">Hexo</a>框架，看着教程和文档一步一步搭，不过居然比我想象中简单，<del>有手就行</del>，这里就大概讲一讲本人搭建该博客的过程和体会吧。（注意：这不是教程，只是把本人搭建过程记录一下而已，<del>怕我忘掉</del>，具体过程建议百度）</p>\n<h3 id=\"本地环境搭建\"><a href=\"#本地环境搭建\" class=\"headerlink\" title=\"本地环境搭建\"></a>本地环境搭建</h3><hr>\n<p>这个不多说，先把<a href=\"https://nodejs.org/en/\">Node.js </a>下好安装，在终端里输入<code>node --version</code>检验是否安装成功，好，搞定。这个时候可以使用Node.js带的包管理工具<code>npm</code>安装Hexo工具（国内使用<code>npm</code>速度有点慢，<strong>可以考虑换<code>taobao</code>源</strong>），很简单，一行命令足矣。=￣ω￣=</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm install hexo-cli -g</code></pre>\n\n<h3 id=\"远程仓库搭建\"><a href=\"#远程仓库搭建\" class=\"headerlink\" title=\"远程仓库搭建\"></a>远程仓库搭建</h3><hr>\n<p>这玩意都不用搭建，去<del>知名同性交友网站</del><a href=\"https://github.com/\">GitHub</a>上<code>create</code>就完事了，省时省力又省钱，仓库命名记得设为<code>用户名.github.io</code>，这个就是博客的域名了，自定义域名？懒得注册，懒得备案，先稍稍吧（国内访问GitHub速度不稳定，<strong>嫌慢可以考虑<a href=\"https://gitee.com/\">Gitee</a>试试</strong>）。好了远程也搞定了，现在就只要把本地和远程关联起来部署上去就好了，好耶！！！！\\^o^/</p>\n<blockquote>\n<p>Git与GitHub的使用是基本功，而且这个网上教程一大把，搭个博客也不需要对此理解多深，会用就行(。・∀・)ノ</p>\n</blockquote>\n<h3 id=\"本地博客搭建\"><a href=\"#本地博客搭建\" class=\"headerlink\" title=\"本地博客搭建\"></a>本地博客搭建</h3><hr>\n<p>之前不是在本地安装了Hexo吗，现在利用这个工具，选择一个合适的目录，在终端中输入命令</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo init 你想为你的Hexo工作目录取的名字\ncd 你想为你的Hexo工作目录取的名字\nnpm install\n# 我一般写成hexo s比较省事\nhexo server</code></pre>\n\n<p>现在博客已经在本地跑起来了，默认通过<code>localhost:4000</code>这个端口访问，一般用于本地预览。</p>\n<p>此时的博客使用的是默认的主题，叫<code>landscape</code>（好像是这个名来着），有点太普通了？直接网上搜其他更好康的主题，推荐一波我用的主题<a href=\"https://github.com/YunYouJun/hexo-theme-yun\">Yun</a>（没收广告费，我是真觉得不戳）。把主题安装到<code>Hexo工作目录/themes</code>下，修改<code>Hexo工作目录</code>下的<code>_config.yml</code>配置文件，找到<code>theme</code>项，更改为</p>\n<pre class=\"language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> yun\n<span class=\"token comment\"># 记得写所要使用的主题的文件夹名</span></code></pre>\n\n<blockquote>\n<p>事实说明，一个好看的主题可以极大的提升博客站长完善与维护博客的心理体验</p>\n</blockquote>\n<p>如果想要对主题进行更多配置的话建议自行搜索方法或看主题的制作者是否提供相关文档，比如我所用的主题就有<a href=\"https://yun.yunyoujun.cn/guide/\">Yun主题使用指南</a>手把手教你配置。</p>\n<p><code>_config.yml</code>中还可以修改许多配置，可以将自己的博客进行各种自定义，建议看<a href=\"https://hexo.io/zh-cn/docs/\">官方文档</a>好好学。</p>\n<p>各项配置完成后，现在可以生成将会被展示出来的静态文件了，在终端中输入</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo clean\n# g 就是 generate 的缩写\nhexo g</code></pre>\n\n<blockquote>\n<p>如果注意观察文件夹，会发现，当输入<code>hexo clean</code>命令后，目录下的<code>public</code>子目录会被删除，输入<code>hexo g</code>命令后，该子目录又会重新生成，这是因为该子目录下存放的就是将会在网页上被浏览的静态文件，当对博客进行修改后，先<code>clean</code>掉原本的静态文件，在<code>generate</code>新的静态文件，这样就完成了对博客的更新。</p>\n</blockquote>\n<p>如果还想在本地预览的话就接着输入</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo s</code></pre>\n\n<p>OK！现在本地博客已经搞定了，开始着手把它部署到远端吧！\\(@^0^@)/</p>\n<h3 id=\"将本地文件与远程仓库建立关联\"><a href=\"#将本地文件与远程仓库建立关联\" class=\"headerlink\" title=\"将本地文件与远程仓库建立关联\"></a>将本地文件与远程仓库建立关联</h3><hr>\n<p>基本的git操作了，直接在工作目录下</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">git init # 此时这个目录就被初始化成了一个Git仓库</code></pre>\n\n<p>然后可以建立一个分支</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">git checkout -b hexo # 表示建立了一个名叫hexo的分支</code></pre>\n\n<p>这个分支我将用于备份博客的源代码文件。（本来没有备份的习惯，但这里参考了<a href=\"https://www.yunyoujun.cn/share/how-to-build-your-site/\">教你如何从零开始搭建一个属于自己的网站 </a>的教程，就也学着做了）</p>\n<p>将这个本地的Git仓库与之前在GitHub上搭建的远程仓库建立关联</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;用户名&#x2F;用户名.github.io</code></pre>\n\n<p>安装Hexo的部署插件<code>hexo-deployer-git</code></p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm install hexo-deployer-git</code></pre>\n\n<p>在<code>_config.yml</code>配置文件中的<code>deployer</code>项中修改</p>\n<pre class=\"language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/用户名/用户名.github.io.git <span class=\"token comment\"># 远程仓库的网址</span>\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main <span class=\"token comment\"># 分支名，表示将要部署的分支</span>\n  <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 可选填，对更新部署的说明</span></code></pre>\n\n<p>至此，本地与远程关联建立完成！</p>\n<h3 id=\"部署与备份\"><a href=\"#部署与备份\" class=\"headerlink\" title=\"部署与备份\"></a>部署与备份</h3><hr>\n<p>部署很简单，之前部署安装了<code>hexo-deployer-git</code>这个插件吗，生成静态文件后直接输入命令</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo d # d 是 deploy 的缩写</code></pre>\n\n<p>完成部署！</p>\n<p>然后还可以对网站源文件上传到远端进行备份，就利用之前建立的分支，同样是基本的git命令</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\"># git代码提交老三样\ngit add -A\ngit commit -m &quot;xxx&quot; # 养成备注说明的好习惯\ngit push # 第一次推送记得指定默认分支\n# git push --set-upstream origin hexo</code></pre>\n\n<p>ohhhhhh！！！现在个人博客已经搭建完毕了！用浏览器访问看看⑧！！ヽ(✿ﾟ▽ﾟ)ノ</p>\n<h3 id=\"个人感受\"><a href=\"#个人感受\" class=\"headerlink\" title=\"个人感受\"></a>个人感受</h3><hr>\n<p>其实搭建个人博客是受了b站up主<a href=\"https://space.bilibili.com/384068749/\">CodeSheep</a>的某期视频<a href=\"https://www.bilibili.com/video/BV1Yb411a7ty\">手把手教你从0开始搭建自己的个人博客 </a>的影响，就自己搭着看看，一路做下来，只能说很多事情唯一的难点就是 <em>Just do it</em> 了，自己搭建博客之前总觉得这玩意涉及了一堆看不懂的技术栈，我这种又菜又懒的辣鸡肯定搭不出来，结果当自己真正上手做了才发现并没有想象的那么夸张，许多东西都是很基础的命令，比如简单的git命令。真正遇到问题了也大多可以通过自己搜索解决，Hexo官方与我所使用的主题也提供了详细的配置文档供我参考，实际过程中并没有遇到什么无法解决的问题，还学到了不少前端知识，<del>爷真nb</del>。希望以后遇到新事物新技术是也能冷静下来好好研究吧，这里总结一下搭建时的心得经验吧：</p>\n<ul>\n<li><strong>不要怕，Just do it! 迈出第一步就成功了一半</strong></li>\n<li>记得提前搭建好本地环境，比如Node.js，git等工具</li>\n<li>搞清楚每一步要在哪一个目录下进行，各种链接与路径要弄清楚</li>\n<li>出问题了别紧张，看清楚报错信息，网上搜一般都可以搜到解决办法</li>\n<li>搜到解决办法不要看见什么就用什么，多看几个人的回答，找大家都提到的方法成功率更高</li>\n<li>不知道下一步怎么做了就看相关文档，文档讲的很详细</li>\n</ul>\n<hr>\n<h3 id=\"以上，第一篇正经博客\"><a href=\"#以上，第一篇正经博客\" class=\"headerlink\" title=\"以上，第一篇正经博客\"></a>以上，第一篇正经博客</h3><p>感谢支持o(*￣▽￣*)o</p>\n","site":{"data":{"yun":{"mode":"auto","bg_image":{"enable":true,"url":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/Rem_up.jpg","opacity":0.8},"colors":{"primary":"#0078E7","bg":"#f5f5f5","selection_bg":"#0078E7","tag_start_color":"#999999","tag_end_color":"#0078E7","dark":{"block":"#1b1f2e"}},"avatar":{"enable":true,"url":"/images/avatar.png","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":false,"emoji":"😊","message":"永远相信美好的事情即将发生"}},"social":[{"name":"RSS","link":"/atom.xml","icon":"icon-rss-line","color":"orange"},{"name":"GitHub","link":"https://github.com/Kenguo05","icon":"icon-github-line","color":"#6e5494"},{"name":"知乎","link":"https://www.zhihu.com/people/chu-jian-72-81-2","icon":"icon-zhihu-line","color":"#0084FF"},{"name":"哔哩哔哩","link":"https://space.bilibili.com/141573043","icon":"icon-bilibili-line","color":"#FF8EB3"},{"name":"E-Mail","link":"mailto:2330281803@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":["Kken","の","牢","骚","小","站"],"src":"/js/ui/banner.js","border":true,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"}},"notice":{"enable":true,"content":"站长很懒，文章更新随缘，不ttk，平平淡淡才是真 =￣ω￣="},"pages":null,"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-book-2-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"源文件","path":"https://github.com/Kenguo05/Kenguo05.github.io/tree/hexo","icon":"icon-archive-line"}},"post_card":{"opacity":0.6},"reward":{"enable":true,"icon":"icon-hand-coin-line","comment":"孩子没吃的了TAT","methods":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163731.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img/img/pay-qrcode/IMG_20210804_163811.png","color":"#2DC100","icon":"icon-wechat-pay-line"}]},"footer":{"since":2021,"live_time":{"enable":true,"prefix":"此站点已破壳","suffix":"_(:з」∠)_","start_time":"2021-07-29T00:00:00"},"support":{"enable":false,"title":"又拍云","link":"https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral","logo":"https://cdn.jsdelivr.net/gh/Kenguo05/blog-img@main/img/blog-emoji/upyun_logo5.png","prefix":"本网站由","suffix":"提供CDN加速"},"beian":{"enable":false,"icp":"湘ICP备2021013028号"}},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"wordcount":{"enable":true,"count":true,"time":true},"local_search":{"enable":true,"src":"/js/search/local-search.js"},"comment":{"enable":true,"tips":["欢迎文明交流讨论，拒绝ttk"],"candidates":["waline"]},"waline":{"enable":true,"serverURL":"https://blog-api-8nz1c1czc-kenguo05.vercel.app/","comment":false,"placeholder":"随便说说~~"}}}},"excerpt":"","more":"<h2 id=\"第一次自己搭建博客\"><a href=\"#第一次自己搭建博客\" class=\"headerlink\" title=\"第一次自己搭建博客\"></a>第一次自己搭建博客</h2><p>现在是暑假嘛，反正没啥事干，正好在网上看见不少个人博客搭建教程，就想着自己搭着玩玩，于是便选择了<a href=\"https://hexo.io/zh-cn/\">Hexo</a>框架，看着教程和文档一步一步搭，不过居然比我想象中简单，<del>有手就行</del>，这里就大概讲一讲本人搭建该博客的过程和体会吧。（注意：这不是教程，只是把本人搭建过程记录一下而已，<del>怕我忘掉</del>，具体过程建议百度）</p>\n<h3 id=\"本地环境搭建\"><a href=\"#本地环境搭建\" class=\"headerlink\" title=\"本地环境搭建\"></a>本地环境搭建</h3><hr>\n<p>这个不多说，先把<a href=\"https://nodejs.org/en/\">Node.js </a>下好安装，在终端里输入<code>node --version</code>检验是否安装成功，好，搞定。这个时候可以使用Node.js带的包管理工具<code>npm</code>安装Hexo工具（国内使用<code>npm</code>速度有点慢，<strong>可以考虑换<code>taobao</code>源</strong>），很简单，一行命令足矣。=￣ω￣=</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm install hexo-cli -g</code></pre>\n\n<h3 id=\"远程仓库搭建\"><a href=\"#远程仓库搭建\" class=\"headerlink\" title=\"远程仓库搭建\"></a>远程仓库搭建</h3><hr>\n<p>这玩意都不用搭建，去<del>知名同性交友网站</del><a href=\"https://github.com/\">GitHub</a>上<code>create</code>就完事了，省时省力又省钱，仓库命名记得设为<code>用户名.github.io</code>，这个就是博客的域名了，自定义域名？懒得注册，懒得备案，先稍稍吧（国内访问GitHub速度不稳定，<strong>嫌慢可以考虑<a href=\"https://gitee.com/\">Gitee</a>试试</strong>）。好了远程也搞定了，现在就只要把本地和远程关联起来部署上去就好了，好耶！！！！\\^o^/</p>\n<blockquote>\n<p>Git与GitHub的使用是基本功，而且这个网上教程一大把，搭个博客也不需要对此理解多深，会用就行(。・∀・)ノ</p>\n</blockquote>\n<h3 id=\"本地博客搭建\"><a href=\"#本地博客搭建\" class=\"headerlink\" title=\"本地博客搭建\"></a>本地博客搭建</h3><hr>\n<p>之前不是在本地安装了Hexo吗，现在利用这个工具，选择一个合适的目录，在终端中输入命令</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo init 你想为你的Hexo工作目录取的名字\ncd 你想为你的Hexo工作目录取的名字\nnpm install\n# 我一般写成hexo s比较省事\nhexo server</code></pre>\n\n<p>现在博客已经在本地跑起来了，默认通过<code>localhost:4000</code>这个端口访问，一般用于本地预览。</p>\n<p>此时的博客使用的是默认的主题，叫<code>landscape</code>（好像是这个名来着），有点太普通了？直接网上搜其他更好康的主题，推荐一波我用的主题<a href=\"https://github.com/YunYouJun/hexo-theme-yun\">Yun</a>（没收广告费，我是真觉得不戳）。把主题安装到<code>Hexo工作目录/themes</code>下，修改<code>Hexo工作目录</code>下的<code>_config.yml</code>配置文件，找到<code>theme</code>项，更改为</p>\n<pre class=\"language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> yun\n<span class=\"token comment\"># 记得写所要使用的主题的文件夹名</span></code></pre>\n\n<blockquote>\n<p>事实说明，一个好看的主题可以极大的提升博客站长完善与维护博客的心理体验</p>\n</blockquote>\n<p>如果想要对主题进行更多配置的话建议自行搜索方法或看主题的制作者是否提供相关文档，比如我所用的主题就有<a href=\"https://yun.yunyoujun.cn/guide/\">Yun主题使用指南</a>手把手教你配置。</p>\n<p><code>_config.yml</code>中还可以修改许多配置，可以将自己的博客进行各种自定义，建议看<a href=\"https://hexo.io/zh-cn/docs/\">官方文档</a>好好学。</p>\n<p>各项配置完成后，现在可以生成将会被展示出来的静态文件了，在终端中输入</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo clean\n# g 就是 generate 的缩写\nhexo g</code></pre>\n\n<blockquote>\n<p>如果注意观察文件夹，会发现，当输入<code>hexo clean</code>命令后，目录下的<code>public</code>子目录会被删除，输入<code>hexo g</code>命令后，该子目录又会重新生成，这是因为该子目录下存放的就是将会在网页上被浏览的静态文件，当对博客进行修改后，先<code>clean</code>掉原本的静态文件，在<code>generate</code>新的静态文件，这样就完成了对博客的更新。</p>\n</blockquote>\n<p>如果还想在本地预览的话就接着输入</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo s</code></pre>\n\n<p>OK！现在本地博客已经搞定了，开始着手把它部署到远端吧！\\(@^0^@)/</p>\n<h3 id=\"将本地文件与远程仓库建立关联\"><a href=\"#将本地文件与远程仓库建立关联\" class=\"headerlink\" title=\"将本地文件与远程仓库建立关联\"></a>将本地文件与远程仓库建立关联</h3><hr>\n<p>基本的git操作了，直接在工作目录下</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">git init # 此时这个目录就被初始化成了一个Git仓库</code></pre>\n\n<p>然后可以建立一个分支</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">git checkout -b hexo # 表示建立了一个名叫hexo的分支</code></pre>\n\n<p>这个分支我将用于备份博客的源代码文件。（本来没有备份的习惯，但这里参考了<a href=\"https://www.yunyoujun.cn/share/how-to-build-your-site/\">教你如何从零开始搭建一个属于自己的网站 </a>的教程，就也学着做了）</p>\n<p>将这个本地的Git仓库与之前在GitHub上搭建的远程仓库建立关联</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;用户名&#x2F;用户名.github.io</code></pre>\n\n<p>安装Hexo的部署插件<code>hexo-deployer-git</code></p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm install hexo-deployer-git</code></pre>\n\n<p>在<code>_config.yml</code>配置文件中的<code>deployer</code>项中修改</p>\n<pre class=\"language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/用户名/用户名.github.io.git <span class=\"token comment\"># 远程仓库的网址</span>\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main <span class=\"token comment\"># 分支名，表示将要部署的分支</span>\n  <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 可选填，对更新部署的说明</span></code></pre>\n\n<p>至此，本地与远程关联建立完成！</p>\n<h3 id=\"部署与备份\"><a href=\"#部署与备份\" class=\"headerlink\" title=\"部署与备份\"></a>部署与备份</h3><hr>\n<p>部署很简单，之前部署安装了<code>hexo-deployer-git</code>这个插件吗，生成静态文件后直接输入命令</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo d # d 是 deploy 的缩写</code></pre>\n\n<p>完成部署！</p>\n<p>然后还可以对网站源文件上传到远端进行备份，就利用之前建立的分支，同样是基本的git命令</p>\n<pre class=\"language-sh\" data-language=\"sh\"><code class=\"language-sh\"># git代码提交老三样\ngit add -A\ngit commit -m &quot;xxx&quot; # 养成备注说明的好习惯\ngit push # 第一次推送记得指定默认分支\n# git push --set-upstream origin hexo</code></pre>\n\n<p>ohhhhhh！！！现在个人博客已经搭建完毕了！用浏览器访问看看⑧！！ヽ(✿ﾟ▽ﾟ)ノ</p>\n<h3 id=\"个人感受\"><a href=\"#个人感受\" class=\"headerlink\" title=\"个人感受\"></a>个人感受</h3><hr>\n<p>其实搭建个人博客是受了b站up主<a href=\"https://space.bilibili.com/384068749/\">CodeSheep</a>的某期视频<a href=\"https://www.bilibili.com/video/BV1Yb411a7ty\">手把手教你从0开始搭建自己的个人博客 </a>的影响，就自己搭着看看，一路做下来，只能说很多事情唯一的难点就是 <em>Just do it</em> 了，自己搭建博客之前总觉得这玩意涉及了一堆看不懂的技术栈，我这种又菜又懒的辣鸡肯定搭不出来，结果当自己真正上手做了才发现并没有想象的那么夸张，许多东西都是很基础的命令，比如简单的git命令。真正遇到问题了也大多可以通过自己搜索解决，Hexo官方与我所使用的主题也提供了详细的配置文档供我参考，实际过程中并没有遇到什么无法解决的问题，还学到了不少前端知识，<del>爷真nb</del>。希望以后遇到新事物新技术是也能冷静下来好好研究吧，这里总结一下搭建时的心得经验吧：</p>\n<ul>\n<li><strong>不要怕，Just do it! 迈出第一步就成功了一半</strong></li>\n<li>记得提前搭建好本地环境，比如Node.js，git等工具</li>\n<li>搞清楚每一步要在哪一个目录下进行，各种链接与路径要弄清楚</li>\n<li>出问题了别紧张，看清楚报错信息，网上搜一般都可以搜到解决办法</li>\n<li>搜到解决办法不要看见什么就用什么，多看几个人的回答，找大家都提到的方法成功率更高</li>\n<li>不知道下一步怎么做了就看相关文档，文档讲的很详细</li>\n</ul>\n<hr>\n<h3 id=\"以上，第一篇正经博客\"><a href=\"#以上，第一篇正经博客\" class=\"headerlink\" title=\"以上，第一篇正经博客\"></a>以上，第一篇正经博客</h3><p>感谢支持o(*￣▽￣*)o</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cksq1dwri0009csvj2uuz4549","category_id":"cksq1dwrd0004csvjc9m008wj","_id":"cksq1dws0000scsvj32z7100m"},{"post_id":"cksq1dwri0009csvj2uuz4549","category_id":"cksq1dwrv000kcsvj6zj90rx7","_id":"cksq1dws1000ucsvjemgmhbma"},{"post_id":"cksq1dwr60001csvjeq7uc9oc","category_id":"cksq1dwrd0004csvjc9m008wj","_id":"cksq1dws2000wcsvj8aih198q"},{"post_id":"cksq1dwr60001csvjeq7uc9oc","category_id":"cksq1dwrv000kcsvj6zj90rx7","_id":"cksq1dws2000zcsvj4t5gdk5r"},{"post_id":"cksq1dwrk000bcsvjdivka0u3","category_id":"cksq1dwrd0004csvjc9m008wj","_id":"cksq1dws30011csvjey113a3d"},{"post_id":"cksq1dwrk000bcsvjdivka0u3","category_id":"cksq1dwrv000kcsvj6zj90rx7","_id":"cksq1dws50015csvjcwld9azu"},{"post_id":"cksq1dwrq000ecsvjebbthbsp","category_id":"cksq1dws1000vcsvjh2e350pa","_id":"cksq1dws70019csvj2sss3ok3"},{"post_id":"cksq1dwrb0003csvj5l54f0hb","category_id":"cksq1dwrd0004csvjc9m008wj","_id":"cksq1dws7001ccsvjhe2oc102"},{"post_id":"cksq1dwrb0003csvj5l54f0hb","category_id":"cksq1dwrv000kcsvj6zj90rx7","_id":"cksq1dws9001gcsvj2b0obrac"},{"post_id":"cksq1dwrr000fcsvjf6zpfhtl","category_id":"cksq1dws60018csvj96kycurf","_id":"cksq1dws9001hcsvj4e5hgv06"},{"post_id":"cksq1dwrf0007csvj8kh34ve4","category_id":"cksq1dwrd0004csvjc9m008wj","_id":"cksq1dws9001jcsvjdd18brj7"},{"post_id":"cksq1dwrf0007csvj8kh34ve4","category_id":"cksq1dwrv000kcsvj6zj90rx7","_id":"cksq1dwsa001kcsvj7inlaxs4"},{"post_id":"cksq1dwsl001ncsvjfesp6ej7","category_id":"cksq1dwsn001ocsvjdqgxf8lm","_id":"cksq1dwso001rcsvj28y11mkj"}],"PostTag":[{"post_id":"cksq1dwr60001csvjeq7uc9oc","tag_id":"cksq1dwre0005csvje8hmf2i0","_id":"cksq1dwrv000jcsvjdn1va1ml"},{"post_id":"cksq1dwr60001csvjeq7uc9oc","tag_id":"cksq1dwrm000dcsvjf0dy937f","_id":"cksq1dwrv000lcsvjfd5v2f4b"},{"post_id":"cksq1dwrb0003csvj5l54f0hb","tag_id":"cksq1dwre0005csvje8hmf2i0","_id":"cksq1dwry000pcsvj5r7w2v3e"},{"post_id":"cksq1dwrb0003csvj5l54f0hb","tag_id":"cksq1dwrm000dcsvjf0dy937f","_id":"cksq1dwrz000qcsvjcfzr4ro8"},{"post_id":"cksq1dwrf0007csvj8kh34ve4","tag_id":"cksq1dwre0005csvje8hmf2i0","_id":"cksq1dws2000ycsvj59qiam7b"},{"post_id":"cksq1dwrf0007csvj8kh34ve4","tag_id":"cksq1dwrm000dcsvjf0dy937f","_id":"cksq1dws30010csvj5fdr1ssd"},{"post_id":"cksq1dwri0009csvj2uuz4549","tag_id":"cksq1dwre0005csvje8hmf2i0","_id":"cksq1dws50014csvj0rqf7xyv"},{"post_id":"cksq1dwri0009csvj2uuz4549","tag_id":"cksq1dwrm000dcsvjf0dy937f","_id":"cksq1dws50016csvj4i64dwuk"},{"post_id":"cksq1dwrk000bcsvjdivka0u3","tag_id":"cksq1dwre0005csvje8hmf2i0","_id":"cksq1dws7001acsvjd33s7q4n"},{"post_id":"cksq1dwrk000bcsvjdivka0u3","tag_id":"cksq1dwrm000dcsvjf0dy937f","_id":"cksq1dws7001bcsvj35w29jar"},{"post_id":"cksq1dwrq000ecsvjebbthbsp","tag_id":"cksq1dws50017csvj8a1pdxgo","_id":"cksq1dws8001fcsvj4gfgbdx9"},{"post_id":"cksq1dwrr000fcsvjf6zpfhtl","tag_id":"cksq1dws8001dcsvj7lcsh9dg","_id":"cksq1dwsa001lcsvj06um7zzt"},{"post_id":"cksq1dwrr000fcsvjf6zpfhtl","tag_id":"cksq1dws9001icsvj2r9gd301","_id":"cksq1dwsa001mcsvj03x32zwr"},{"post_id":"cksq1dwsl001ncsvjfesp6ej7","tag_id":"cksq1dwsn001pcsvjbxv6bwhf","_id":"cksq1dwso001scsvj8pys9c3k"},{"post_id":"cksq1dwsl001ncsvjfesp6ej7","tag_id":"cksq1dws8001dcsvj7lcsh9dg","_id":"cksq1dwso001tcsvjbehn3v0x"},{"post_id":"cksq1dwsl001ncsvjfesp6ej7","tag_id":"cksq1dwso001qcsvjgxu2d4n5","_id":"cksq1dwso001ucsvj45wa85uh"}],"Tag":[{"name":"Java","_id":"cksq1dwre0005csvje8hmf2i0"},{"name":"学习","_id":"cksq1dwrm000dcsvjf0dy937f"},{"name":"博客功能测试","_id":"cksq1dws50017csvj8a1pdxgo"},{"name":"博客搭建","_id":"cksq1dws8001dcsvj7lcsh9dg"},{"name":"SSL","_id":"cksq1dws9001icsvj2r9gd301"},{"name":"Hexo","_id":"cksq1dwsn001pcsvjbxv6bwhf"},{"name":"分享","_id":"cksq1dwso001qcsvjgxu2d4n5"}]}}